<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高观点下的性别认同问题</title>
      <link href="/2019/05/15/%E9%AB%98%E8%A7%82%E7%82%B9%E4%B8%8B%E7%9A%84%E6%80%A7%E5%88%AB%E8%AE%A4%E5%90%8C%E9%97%AE%E9%A2%98/"/>
      <url>/2019/05/15/%E9%AB%98%E8%A7%82%E7%82%B9%E4%B8%8B%E7%9A%84%E6%80%A7%E5%88%AB%E8%AE%A4%E5%90%8C%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>$$<br>{\color{red}{全世界无产者，联合起来！}}<br>$$</p><h1 id="第零章-导言"><a href="#第零章-导言" class="headerlink" title="第零章 导言"></a>第零章 导言</h1><p>请留意本文的版权说明。</p><p>在上个月（2019.4），我和心理办公室的老师曾经一起探讨过性别认同这个问题。现在将我们讨论出的结果呈现在讲稿中，讲演给各位同学。</p><p>注意：这里的异化和马克思主义哲学的异化范畴不是一样的概念。</p><p>随着社会的发展，越来越多的人在性别上开始走向自身的“反面”，因此，研究这一现象，<strong>不仅是理论的必要，而且也是现实的必要</strong>。</p><blockquote><p>性别认同（或称性别同一性）是对自身性别的正确认识，即掌握自己的性属性或相应的作用。</p></blockquote><h1 id="第一章-初识身边的性别认同问题"><a href="#第一章-初识身边的性别认同问题" class="headerlink" title="第一章 初识身边的性别认同问题"></a>第一章 初识身边的性别认同问题</h1><p>我们的身边不乏有性别认同问题的存在。比如在GitHub上有一个非常有名的<a href="https://github.com/komeiji-satori/Dress" target="_blank" rel="noopener">项目</a>——这是目前GitHub上已知的最大的女装<strong>资料库</strong>，而且有人正在利用其来开发一个<strong>女装识别器</strong>。</p><p>你是否参加过<strong>各类漫展</strong>？</p><p>你身边是否有很<strong>娘</strong>的男生或者很<strong>Man</strong>的女生？</p><p>下面展示一张图片：</p><p><img src="https://i.loli.net/2019/05/18/5cdfe46e85f4965265.jpg" alt="00.jpg"></p><p>这都是我们身边的性别认同问题。为了叙述方便，我们约定，将存在性别认同的人划为<strong>性别异化</strong>的范畴。</p><p>这里的异化和马克思主义哲学的异化范畴不是一样的概念。</p><h1 id="第二章-舆论"><a href="#第二章-舆论" class="headerlink" title="第二章 舆论"></a>第二章 舆论</h1><p>公众舆论是怎么对待这些可怜的性别异化者呢？一般来说，有如下的说法：</p><blockquote><p>可爱的男孩子什么的最棒啦！</p></blockquote><p>这明显是对性别异化的一种<strong>支持</strong>。</p><blockquote><p>不男不女$\dots$</p></blockquote><p>这明显是一种<strong>尖锐的批评</strong>。</p><h1 id="第三章-理论"><a href="#第三章-理论" class="headerlink" title="第三章 理论"></a>第三章 理论</h1><p>有的同学可能会有疑惑：</p><blockquote><p>我们这是心理学的论坛，讲哲学干什么呢？</p></blockquote><p>哲学是最抽象的科学，因而也是应用最广的科学。因此，使用哲学理论来<strong>指导</strong>我们的工作是很好的。再说，心理学本身就是脱胎于哲学，正所谓：</p><blockquote><p>哲心不分家。</p></blockquote><p>我们务必先理解一下唯物辩证法的两个观点。</p><h2 id="第一节-特殊性和普遍性"><a href="#第一节-特殊性和普遍性" class="headerlink" title="第一节 特殊性和普遍性"></a>第一节 特殊性和普遍性</h2><p><strong>绝不能以特殊性否定普遍性</strong>。这个观点的证明是否复杂，有兴趣的同学可以自行理解。</p><p>结合人类的认识规律。人类认识事物一定遵循着“从特殊到一般”，由特殊本质归纳出普遍本质。《论“数学抽象”的基本特征》（载于《数学通讯》（下半月）2019第一期）一文指出：</p><blockquote><p>数学对象并不是没有内容的，也不是与现实世界毫无关系的，从本源上来说，许多数学对象来自于现实世界。在某一数学对象及其理论被数学家创造出来之后，就像现实世界客观存在的事物一样具有一定的客观属性。另一方面，表现为数学概念，数学理论等的数学抽象的产物，其所蕴含的数学内容是有与其数学基础与逻辑保障的，并不断受到数学共同体的检验从这个角度而言，数学抽象具有一定的客观性。</p></blockquote><p>新的特殊存在的发现是对现有的集合体的<strong>批判</strong>。我们可以从历史中找到很多的例子，例如毕达哥拉斯学派关于无理数的争论，虚数的引入等等。这些新的数的发现都使得其时的数体系受到批判，从而变得更加完整了。</p><p>以特殊性否定普遍性是形而上学的做法。</p><p>一次函数是函数，那么二次函数是吗？答案是肯定的。一次函数$f(x)=kx+b$和二次函数$g(x)=x^2+\pi x$都是函数的特殊形式，而函数的一般形式则是两集和间的映射关系。除了一次函数和二次函数外，还有更多更多的函数：</p><ul><li>$f(x)=\sin x$</li><li>$g(x)=\log_2 e^x$</li><li>$\mu(x)$（莫比乌斯函数）</li><li>$\phi(p)$（欧拉函数）</li></ul><p>难道能用一次函数的特殊性否定了函数的一般性质吗？明显是不行的。如果以特殊性否定了一般性，那么抽象也就不存在了，作为抽象的抽象的<strong>数学</strong>也就不存在了。</p><h2 id="第二节-对立统一规律及方法论。唯物辩证法"><a href="#第二节-对立统一规律及方法论。唯物辩证法" class="headerlink" title="第二节 对立统一规律及方法论。唯物辩证法"></a>第二节 对立统一规律及方法论。唯物辩证法</h2><p><strong>我们不打算把整个辩证法讲完，甚至不打算把整个对立统一规律讲完</strong>——因为辩证法及其三大规律是马克思主义哲学中很重要的一块，没有几年的时间是很难完全掌握的。不过，我们可以了解一些<strong>方法论</strong>的理论，来丰富我们的方法。由于时间关系，我们甚至连矛盾这一重要的哲学范畴也不进行介绍。但是应该强调的是，作为哲学范畴的“矛盾”和作为逻辑学范畴的“矛盾”的意义是不同的。前者是反映事物内部对立统一关系的哲学范畴，后者则是逻辑上的“自相矛盾”。</p><p>注意术语的内在含义。</p><h3 id="两点论"><a href="#两点论" class="headerlink" title="两点论"></a>两点论</h3><p>在一个事物中，不可能只含有一对矛盾。既然矛盾有很多，那么就一定存在<strong>主要矛盾</strong>和<strong>次要矛盾</strong>的区分。主要矛盾就是对事物的运动起决定性作用的矛盾，即处主导地位的矛盾。而其他的矛盾是次要矛盾。</p><p>主要矛盾和次要矛盾也是一对矛盾。也遵循三大规律。</p><p>方法论：</p><ul><li>认识、改造事物要抓住重点，集中力量去解决主要矛盾。</li><li>要统筹兼顾，恰当处理次要矛盾。</li></ul><h3 id="重点论"><a href="#重点论" class="headerlink" title="重点论"></a>重点论</h3><p>每一矛盾中的两方面的力量是不平衡的。其中，必有一方处于支配地位，起着主导作用，而另一方则处于被支配地位。前者是矛盾的<strong>主要方面</strong>，后者是矛盾的<strong>次要方面</strong>。</p><p>事物的性质主要由主要矛盾的主要方面决定。</p><p>方法论：</p><ul><li>矛盾的主次方面的辩证关系要求我们看问题既要全面，又要善于区分主流和支流。</li></ul><p>矛盾的主次之分、矛盾的主次方面的辩证关系要求我们要坚持两点论和重点论的<strong>统一</strong>。</p><p>反对形而上学的一点论和均衡论。</p><h1 id="第四章-服务于实践的哲学"><a href="#第四章-服务于实践的哲学" class="headerlink" title="第四章 服务于实践的哲学"></a>第四章 服务于实践的哲学</h1><p>理论源于实践，又终将回归实践。在理解了第三章中阐述的辩证法强调的方法论后，我们终于可以把哲学应用在日常生活工作中了。正如卡尔·马克思所说：</p><blockquote><p>“哲学家们只是用不同的方式解释世界，而问题在于改变世界。”——《关于费尔巴哈的提纲》</p></blockquote><p>首先我们应当明确：性别异化究竟合不合理？我们十分厌恶黑格尔的热昏胡话：</p><blockquote><p>“凡是合乎理性的东西都是现实的；凡是现实的东西都是合乎理性的。”——《法哲学原理》序</p></blockquote><p>我们直接看弗里德里希·恩格斯是怎么说的吧：</p><blockquote><p>“这显然是把现存的一切神圣化，是在哲学上替专制制度、替警察国家、替王室司法、替书报检查制度祝福。弗里德里希—威廉三世是这样想的，他的臣民也是这样想的。但是，在黑格尔看来，凡是现存的决非无条件地也是现实的。在他看来，现实的属性仅仅属于那同时是必然的东西……”——《费尔巴哈和德国古典哲学的终结》</p></blockquote><p>根据特殊性和普遍性的理论，我们可以得出：<strong>个人的装束、举止和其性别来说没有任何关系。因为个人的装束、举止是特殊的，而性别的本质是第一性征</strong>。</p><p>不过，也不乏有陷入性别异化困境而想改变现状的人。对于这种想改变自己的人，我们也有一套理论来帮助他们。</p><p>首先，我们对性别异化者进行矛盾分析。由于时间有限，我在这里只列出我的分析结果，证明过程略。</p><p>主要矛盾：理想与现实的矛盾——成为异性的理想和自身是非异性的现实的矛盾。</p><p>次要矛盾：理想与现实的矛盾——渴望他人肯定的理想和他人否定的现实的矛盾。</p><p>那么，根据两点论，我们要着重处理主要矛盾。怎么样才可以消灭矛盾呢？——只需要毁灭任一对立面即可。又根据两点论，我们应当先处理矛盾的主要方面，我认为，主要矛盾的两方面是：</p><ul><li>主要方面：理想</li><li>次要方面：现实</li></ul><p>很显然，矛盾是由理想的产生而产生——因为现实一直都是这样，<strong>几乎不</strong>产生变化，故对矛盾的影响是很小的。</p><p>下面讨论如何消灭理想。</p><p>其实问题也很简单——通过一些外在的刺激，使TA对这种理想产生厌恶，那么理想就被自己<strong>否定</strong>了。比如，对于女装成瘾的男生，我们可以通过一些手段，比如把女装和不好的东西联系在一起，使其对女装产生厌恶。（在应用心理学中称为<strong>厌恶疗法</strong>）当然，作为科学的哲学对具体的细节并不感兴趣——事实上，我们根本无法预见它们，只能<strong>具体问题具体分析</strong>。</p><p>但是，也有人选择否定现实。在现代科技的帮助下，易性是现实的。通过易性术来达到否定现实的目的也是解决矛盾一种手段。不过，实践证明，大部分患者在易性后会产生<strong>后悔</strong>的心理，因此我们不推荐这么做——实践证明了马克思主义哲学是<strong>对</strong>的。</p><p>同时，我们还要顾及到次要矛盾。作为患者的同学朋友，我们应当积极地帮助TA逃离这种<strong>性别异化</strong>的状态，而不是去嘲笑，歧视TA。</p><h1 id="第五章-尾声"><a href="#第五章-尾声" class="headerlink" title="第五章 尾声"></a>第五章 尾声</h1><p>这次讲演的主题是哲学，而不是心理学。我只是借着五二五这个机会向大家宣传一些基本的哲学思想。希望这些思想理论可以对大家平时的生活工作——实践带来方便。</p>]]></content>
      
      
      <categories>
          
          <category> 讲义 </category>
          
          <category> 马克思主义哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 马克思主义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马爸爸的IT创业课堂讲义（第一讲）</title>
      <link href="/2019/05/04/%E9%A9%AC%E7%88%B8%E7%88%B8%E7%9A%84IT%E5%88%9B%E4%B8%9A%E8%AF%BE%E5%A0%82%E8%AE%B2%E4%B9%89%EF%BC%88%E7%AC%AC%E4%B8%80%E8%AE%B2%EF%BC%89/"/>
      <url>/2019/05/04/%E9%A9%AC%E7%88%B8%E7%88%B8%E7%9A%84IT%E5%88%9B%E4%B8%9A%E8%AF%BE%E5%A0%82%E8%AE%B2%E4%B9%89%EF%BC%88%E7%AC%AC%E4%B8%80%E8%AE%B2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>生产的要素：</p><ul><li>劳动者提供的劳动力</li><li>资本家提供的资本</li></ul><p>因此：<br>$$<br>生产资料+劳动=劳动产品<br>$$<br>有公式：<br>$$<br>c+v+m=w<br>$$<br>其中：</p><ul><li>$c$:固定资本（生产资料）</li><li>$v$:可变资本（劳动力的价值）</li><li>$m$:剩余价值</li><li>$w$:总价值</li></ul><p>例如：</p><p>马爸爸技术有限公司要开发一个项目：<strong>反反996宣传器</strong>，现在需要<strong>六台电脑及其损耗</strong>，<strong>程序员六人</strong>。程序员一个月工资$20000$元，项目预计两个月可以完成，预计市场$2000000$元。</p><p>因此：<br>$$<br>c=2\times \phi\<br>v=2\times20000\times6=240000\<br>w=2000000<br>m=w-c-v=2000000-240000-2\phi=1760000-2\phi<br>$$<br>假定电脑设备的月均耗损$\phi=500$，则：<br>$$<br>w=1760000-2\phi=1759000<br>$$<br>所以我们得出，六个程序员创造出了两百万元对应的价值量，其中剩余价值为一百七十五万九千元对应的价值量。</p><p>毫无疑问，这一百七十多万的剩余价值都被<strong>老板，即马爸爸</strong>（2333333）无偿占有了。</p><p>程序员是被剥削的。</p><p>我们接下来论证，为什么996工作制度对程序员来说更加不利。</p><p>为了方便计算，我们约定：<br>$$<br>每小时每人工资：\lambda=500<br>$$<br>由伟大的<strong>996工作体制</strong>易得：</p><p>一天工作$12$小时，则没人每天的工资是：<br>$$<br>v_0=12\lambda=6000<br>$$<br>高收入群体。</p><p>对于这个问题，我们不管老板剥削了<strong>多少</strong>，我们只关心老板是<strong>如何</strong>剥削程序员的。</p><ul><li><p>方法一 从955到996</p><p>955的月工作时间：$31\div7\times5\times8=177$</p><p>996的月工作时间：$31\div7\times6\times12=318$</p><p>还是以刚才的那个项目为例，工人创造了一百七十五万九千元的剩余价值。那么如果我们<strong>无偿的</strong>延长工人的工作时间，即在可变资本即工资不变的情况下延长工作时间。</p><p>约定下面的量：</p><ul><li><p>$c=1000$</p></li><li><p>$v’=500000$（月工资）</p></li><li><p>$w=2000000$</p></li><li><p>$m=w-12v’-c=1399000$</p></li><li><p>995:</p><p>如上。</p></li><li><p>996:</p><p>工人每天无偿给资本家工作<strong>四小时</strong>，加班文化万岁！</p><p>所以，相对于项目，原先需要：<br>$$<br>t=(31+30)\div7\times5\times8\times6=2091<br>$$<br>个工时完成。</p><p>则现在需要<br>$$<br>mo=2091\div12\div6\div7\div4=1<br>$$<br>个月就可以完成！！！</p><p>等于资本家可以少付一个月的工资，而获得原来两个月的剩余价值！！！</p><p>更加不平等的剥削——但是我们是狼性文化啊！！！！</p></li><li><p>方法二 更细致的分工</p><p>资本家可以通过<strong>使分工更加细致</strong>的手段来更加变本加厉地剥削程序员。我们首先来理解一下，工人的工资是怎么确定的。</p><p>雇佣实际上是一场<strong>交易</strong>——工人出售劳动力，资本家出售货币。</p><p>劳动力的价值如何确定？——答案是：使劳动力可以再生的最低资料的价值总和。</p><p>例如，一个程序员一天至少：</p><ul><li>花费100元来买吃的</li><li>花费200元来还房贷车贷汽油电费孩子学费之类琐碎</li><li>花费200元来学习（真TM好学）</li></ul><p>所以，贵公司想要养活一个程序员，每天至少要付给TA500元！</p><p>反映到一个月，就是$500\times30=15000$元！</p><p>哎，工资那么少，看来只是一个小码工啊。</p><p>好了，现在我们看看AI工程师的一天……：</p><ul><li>花费100元来买吃的</li><li>花费200元来还房贷车贷汽油电费孩子学费之类琐碎</li><li>花费1000元来学习</li><li>花费500元来？？？</li></ul><p>所以，贵公司想要养活一个AI工程师，每天想要投入2000元，反映到一个月就是$2000\times30=60000$</p><p>月薪六万啊！——马爸爸慌了——这让我赚什么钱啊！</p><p>你想想，怎么才能让马爸爸赚到更多的钱呢？</p><p>单单从工资上来说，一个AI工程师等于4个小码工。</p><p>马爸爸一拍脑袋——对啊，我可以解雇掉我们的工程师，让他滚到微软去，然后聘请四个小码工——四个小码工的工作效率肯定比一个AI工程师高！</p><p>假设AI工程师一小时可以完成的工作量是$\alpha=20$，一个小码工一小时可以完成的工作量是$\alpha=10$。</p><p>马爸爸把四个小码工给塞到工程师的办公室里，那么这个办公室的每小时的工作效率是多少呢？<br>$$<br>\alpha=40<br>$$<br>果然！四个小码工的工作效率比一个工程师要高！我tm还花大钱聘请这些废物干什么……</p><p>好了，言归正传。马爸爸的这种做法，其实也是对绝对剩余价值的一种热爱的表现。你想想啊，我们把四个小码工看做一个联合体，那么他们的工资和工程师一样，但是他们干的活却多——也就是说，在单位时间里，联合体给马爸爸创造的财富是工程师给马爸爸创造的财富的四倍！！！</p></li></ul><p>好啦，马爸爸的IT创业课堂就到这里了。什么？你不知道怎么更有效地赚钱？</p><p>结合996和分工不就好啦！下面的小码工什么也不懂，每个月给他们多发$300$元奖金不就好啦~</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 讲义 </category>
          
          <category> 马爸爸的IT创业课堂 </category>
          
          <category> 第一讲 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用偏导数工具解一类最值问题</title>
      <link href="/2019/04/25/%E5%88%A9%E7%94%A8%E5%81%8F%E5%AF%BC%E6%95%B0%E5%B7%A5%E5%85%B7%E8%A7%A3%E4%B8%80%E7%B1%BB%E6%9C%80%E5%80%BC%E9%97%AE%E9%A2%98/"/>
      <url>/2019/04/25/%E5%88%A9%E7%94%A8%E5%81%8F%E5%AF%BC%E6%95%B0%E5%B7%A5%E5%85%B7%E8%A7%A3%E4%B8%80%E7%B1%BB%E6%9C%80%E5%80%BC%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 已知$x,y,z\in R,x+y+z=1$，求$M=xy+2yz+3xz$的最大值</p></blockquote><p>$$<br>x+y+z=1\Leftrightarrow z=1-x-y\<br>\Rightarrow M=f(x,y)=xy+2y(1-x-y)+3x(1-x-y)\<br>=-3x^2-xy^2-4xy+3x+2y<br>$$<br>求$f(x,y)$的偏导数：<br>$$<br>\left{<br>\begin{aligned}<br>\frac{\partial f(x,y)}{\partial x}=-6x-4y+3\<br>\frac{\partial f(x,y)}{\partial y}=-4x-4y+2<br>\end{aligned}<br>\right.<br>$$<br>由费马定理，联立方程组：<br>$$<br>\left{<br>\begin{aligned}<br>-6x-4y+3=0\<br>-4x-4y+2=0<br>\end{aligned}<br>\right.<br>$$<br>解得：<br>$$<br>\left{<br>\begin{aligned}<br>x=\frac12\<br>y=0<br>\end{aligned}<br>\right.<br>$$<br>故$z=\frac12$。故$M$有最大值$\frac34$。</p><p>在初中阶段，往往不需要考虑多元函数是否有最值，但在后期的学习中却往往需要考虑。</p><p>传统的方法：<br>$$<br>M=-3x^2-2y^2-4xy+3x+2y\<br>=-2[y^2+2(x-\frac12)y+(x-\frac12)^2]-3x^2+3x+2(x-\frac12)^2\<br>=-2(x+y-\frac12)^2-x^2+x+\frac12\<br>=-2(x+y+\frac12)^2-(x-\frac12)^2+\frac34\leq\frac34<br>$$<br>当且仅当$x=\frac12,y=0$，时，不等式取等号。故$M$有最大值$\frac34$。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解一道日本赛题</title>
      <link href="/2019/04/24/%E8%A7%A3%E4%B8%80%E9%81%93%E6%97%A5%E6%9C%AC%E8%B5%9B%E9%A2%98/"/>
      <url>/2019/04/24/%E8%A7%A3%E4%B8%80%E9%81%93%E6%97%A5%E6%9C%AC%E8%B5%9B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>平太给大介出了一道计算题（$A$，$B$各代表两位数中各位上的数字，相同的字母代表相同的数字）：<br>$$<br>\overline{AB}\times\overline{BA}=<br>$$<br>大介：“得数是$2872$。”</p><p>平太：“不对。”</p><p>大介：“个位的数字对吗？”</p><p>平太：“对。”</p><p>大介：“其他数位的数字有对的吗？”</p><p>平太：“这是保密的。但你调换一下四位数$2872$中$4$个数的位置，就能得出正确答案。”</p><p>请求出正确答案。</p><p>（第$13$届日本数学奥林匹克决赛）</p></blockquote><p>因为个位数为$2$，所以$B\times A$只能是：</p><ul><li>$1\times2$</li><li>$2\times6$</li><li>$3\times4$</li><li>$4\times8$</li><li>$6\times7$</li><li>$8\times9$</li></ul><p>一一带入检验，得：<br>$$<br>\left{<br>\begin{aligned}<br>12\times21=252\<br>26\times62=1612\<br>34\times43=1462\<br>48\times84=4032\<br>67\times76=5092\<br>89\times98=8722<br>\end{aligned}<br>\right.<br>$$<br>注意到只有$8722$与$2872$的构成数字完全相同。</p><p>故正确答案为$8722$。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用三角函数诱导公式解一道联考题</title>
      <link href="/2019/04/22/%E7%94%A8%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E8%AF%B1%E5%AF%BC%E5%85%AC%E5%BC%8F%E8%A7%A3%E4%B8%80%E9%81%93%E8%81%94%E8%80%83%E9%A2%98/"/>
      <url>/2019/04/22/%E7%94%A8%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E8%AF%B1%E5%AF%BC%E5%85%AC%E5%BC%8F%E8%A7%A3%E4%B8%80%E9%81%93%E8%81%94%E8%80%83%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>已知点$A=(0,4),B=(0,-6)$，$C$为$x$轴正半轴上一点，且满足$\angle ACB=45^\circ$，则点$C$的坐标为？</p><p>（乐清六校理科班第一次联考，5018.9.28）</p></blockquote><p>在平面直角坐标系$xOy$中，设$C=(x,0)$,$\angle ACO=\alpha$，$\angle BCO=\beta$：<br>$$<br>\left{<br>\begin{aligned}<br>\tan\alpha=\frac4x\<br>\tan\beta=\frac6x<br>\end{aligned}<br>\right.<br>$$<br>由三角函数的<strong>诱导公式</strong>知：<br>$$<br>\tan(\alpha+\beta)=\frac{\tan\alpha+\tan\beta}{1-\tan\alpha\tan\beta}<br>=\frac{\frac{10}x}{1-\frac{24}{x^2}}<br>=\frac{10x}{x^2-24}<br>=1<br>$$</p><p>$$<br>\Leftrightarrow x^2-10x-24=0\<br>\Leftrightarrow (x=-2)\vee(x=12)<br>$$</p><p>因为点$C$在$x$轴正半轴上，舍去$x=-2$。</p><p>故$C=(12,0)$。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个重要的三角形不等式的证明</title>
      <link href="/2019/04/20/%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/04/20/%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84%E4%B8%89%E8%A7%92%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>在$\triangle ABC$中，有:<br>$$<br>\sum \sin A\leq\frac{3\sqrt3}2<br>$$<br>记$f(x)=\sin x$，则：<br>$$<br>\frac{df(x)}{dx}=\cos x\\frac{d^2f(x)}{dx^2}=-\sin x<br>$$<br>故$\frac{d^2f(x)}{dx^2}&lt;0$在$x\in(0,\pi)$上恒成立。</p><p>从而，在$x\in(0,\pi)$上$f(x)$为凸函数。</p><p>由<strong>琴生不等式</strong>得：<br>$$<br>\frac{f(A)+f(B)+f(C)}{3}\leq f(\frac{A+B+C}3)<br>$$<br>故$\sum\sin A\leq\frac{3\sqrt3}2$</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于数学抽象的摘录</title>
      <link href="/2019/04/19/%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E6%8A%BD%E8%B1%A1%E7%9A%84%E6%91%98%E5%BD%95/"/>
      <url>/2019/04/19/%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E6%8A%BD%E8%B1%A1%E7%9A%84%E6%91%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>文本来源：鲁杰峰，马文杰：《论“数学抽象”的基本特征》[J].数学通讯（下半月），2019（1）</p><p>文中的&lt;&gt;中的文字是笔者加的。</p><blockquote><h1 id="数学抽象的基本特征"><a href="#数学抽象的基本特征" class="headerlink" title="数学抽象的基本特征"></a>数学抽象的基本特征</h1><h2 id="2-数学抽象具有客观性"><a href="#2-数学抽象具有客观性" class="headerlink" title="2.数学抽象具有客观性"></a>2.数学抽象具有客观性</h2><p>数学是以抽象的方式与形式来反映客观世界的数量关系与空间形式的一门科学，具有一定的客观性。数学抽象的客观性常常表现为许多抽象的数学理论具有一定的客观现实背景，或者数学抽象的产物（即数学理论）在社会生活、科学研究中具有广泛的用途。《全日制义务教育数学课程标准（试验稿）》指出：“数学是人们对客观世界定性把握和定量刻画、逐渐抽象概括、形成方法和理论，并进行广泛应用的过程。”从本源上来说，很多数学概念或者数学理论是从现实世界客观存在的事物中，经过抽象，概括出客观事物之间的数量和数量的关系、图形与图形的关系。其数学抽象的过程并不是由人们凭空捏造、任意想象的，并不会因为某一个（类）人的某种观念的变化而发生改变。&lt;参考欧根·杜林先生的数学先验论&gt;数学抽象的客观性还表现在数学抽象的对象与结果是客观的。数学对象并不是没有内容的，也不是与现实世界毫无关系的，从本源上来说，许多数学对象来自于现实世界。在某一数学对象及其理论被数学家创造出来之后，就像现实世界客观存在的事物一样具有一定的客观属性。&lt;不是观念！&gt;另一方面，表现为数学概念，数学理论等的数学抽象的产物，其所蕴含的数学内容是有与其数学基础与逻辑保障的，并不断受到数学共同体的检验&lt;实践是检验真理的唯一标准！&gt;从这个角度而言，数学抽象具有一定的客观性。</p><p>$\dots$</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 摘录 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拉脱维亚历史</title>
      <link href="/2019/04/11/%E6%8B%89%E8%84%B1%E7%BB%B4%E4%BA%9A%E5%8E%86%E5%8F%B2/"/>
      <url>/2019/04/11/%E6%8B%89%E8%84%B1%E7%BB%B4%E4%BA%9A%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>拉脱维亚和爱沙尼亚一道，在中古时期统称为立窝尼亚，很早就居住着拉脱维亚人、立窝人、库尔人等波罗的海沿岸各部落。$1202$年，立窝尼亚主教阿尔伯特创建了由德意志封建小领主组成的圣剑骑士团。$1237$年，圣剑骑士团由与条顿骑士团合并，盘踞在波罗的海东岸一带。$16$世纪中叶，俄罗斯伊万四世进攻立窝尼亚骑士团国家，骑士团转而寻求波兰-立陶宛和丹麦的保护。$1561$年骑士团瓦解后，立窝尼亚归属立陶宛，后又转归波兰。$18$世纪末，在瓜分波兰的过程中，拉脱维亚被沙皇俄国吞并。</p><p>第一次世界大战后，$1918$年，苏俄政府承认了拉脱维亚等国的独立。$1920$年，双方签订了和平条约。$1922$年，拉脱维亚制定共和国宪法。苏联成立后，拉脱维亚等波罗的海三国迟迟不愿加入联盟。直到$1940$年，拉脱维亚才与立陶宛以及爱沙尼亚一道，加入了苏联，成为了苏联的加盟共和国。</p><p>$1987$年，拉脱维亚首都里加发生了游行示威，反对$48$年前的《苏德密约》，以及加入苏联的决定。$1988$年$8$月，拉脱维亚与立陶宛、爱沙尼亚三国举行了号称“波罗的海之路”的行动，大约$200$万人拉起了长达$600$公里的人链，站立$15$分钟之久，高喊“俄国人滚出波罗的海”的口号。$1989$年$7$月，拉脱维亚共和国率先发表《共和国主权宣言》，宣布本共和国的法律高于全苏法律，这是苏联加盟共和国的第一个“主权宣言”，成为苏联解体的启端。$1990$年$4$月重组拉脱维亚共产党，同年$5$月，拉脱维亚通过恢复独立的宣言。$1991$年$8$月$22$日，拉脱维亚正式宣布独立。</p><p>今天的拉脱维亚，面积$6$万多平方公里，人口近$300$万，首都里加是个风景优美的城市，有“欧洲美人”之称。</p>]]></content>
      
      
      <categories>
          
          <category> 历史 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员国际歌。反对996</title>
      <link href="/2019/04/04/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9B%BD%E9%99%85%E6%AD%8C%E3%80%82%E5%8F%8D%E5%AF%B9996/"/>
      <url>/2019/04/04/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9B%BD%E9%99%85%E6%AD%8C%E3%80%82%E5%8F%8D%E5%AF%B9996/</url>
      
        <content type="html"><![CDATA[<p>起来，将过劳死的程序员！</p><p>起来，全IT界受苦的人！</p><p>起来反抗资本的暴政，</p><p>要为了真理而斗争！</p><p>$996$,打个落花流水，</p><p>码工们起来，起来！</p><p>不要说我们一无所有，</p><p>我们要做天下的主人！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>从来就没有什么救世主——</p><p>也不靠议会和总统。</p><p>要创造程序员的幸福</p><p>——全靠我们自己！</p><p>我们要夺回劳动果实——</p><p>让思想冲破牢笼！</p><p>快为阶级的权利而斗争，</p><p>趁热打铁才能成功！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>是谁创造了网络世界？</p><p>是我们码农群众！</p><p>——一切归程序员们所有，</p><p>资本家怎能占有？</p><p>伟大的劳动大军：</p><p>阶级斗争已经开始！</p><p>起来吧，伟大的码工：</p><p>胜利的曙光就在前头！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>工人们，听那邪恶的口号——</p><p>老板，比我们更辛苦……</p><p>劳有所获，公平无比——</p><p>哪有剥削在其中？</p><p>工人们！看看我们的状况——</p><p>身体和家庭都被毁灭！</p><p>我们必须有所行动——</p><p>全世界的程序员，联合起来！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p><p>这是最后的斗争，团结起来到明天！</p><p>程序员自由的劳动条件，就一定要实现！</p>]]></content>
      
      
      <categories>
          
          <category> 歌词 </category>
          
          <category> 反对996 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道三角不等式题的证明</title>
      <link href="/2019/03/28/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E4%B8%8D%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/28/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E4%B8%8D%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>已知$0&lt;\theta_1&lt;\theta_2&lt;\dots&lt;\theta_n&lt;\frac\pi2$，求证：<br>$$<br>\cot\theta_n&lt;\frac{\sum^n_{i=1}\cos\theta_i}{\sum^n_{i=1}\sin\theta_i}&lt;\cot\theta_1<br>$$<br>（命题$946$）</p></blockquote><p>$$<br>0&lt;\theta_1&lt;\theta_2&lt;\dots&lt;\theta_n&lt;\frac\pi2<br>$$</p><p>$$<br>\Rightarrow\left{<br>\begin{aligned}<br>\sin\theta_i&amp;&gt;&amp;0(i=1,2,\dots,n) \<br>\cot\theta_1&amp;&gt;&amp;\cot\theta_2&gt;\dots&gt;\cot\theta_n<br>\end{aligned}<br>\right.<br>$$</p><p>$$<br>\cot\theta_1&gt;\cot\theta_i&gt;\cot\theta_n(i=2,3,\dots,n-1)<br>$$</p><p>$$<br>\Rightarrow\cot\theta_1\sin\theta_i&gt;\cos\theta_i&gt;\cot\theta_n\sin\theta_i<br>$$</p><p>$$<br>\Rightarrow\cot\theta_1\cdot\sum^n_{i=1}\sin\theta_i&gt;\sum^n_{i=1}\cos\theta_i&gt;\cot\theta_n\cdot\sum^n_{i=1}\sin\theta_i<br>$$</p><p>$$<br>\sum^n_{i=1}\sin\theta_i&gt;0\Rightarrow\cot\theta_n&lt;\frac{\sum^n_{i=1}\cos\theta_i}{\sum^n_{i=1}\sin\theta_i}&lt;\cot\theta_1<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道三角恒等式的简单题</title>
      <link href="/2019/03/27/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E6%81%92%E7%AD%89%E5%BC%8F%E7%9A%84%E7%AE%80%E5%8D%95%E9%A2%98/"/>
      <url>/2019/03/27/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E6%81%92%E7%AD%89%E5%BC%8F%E7%9A%84%E7%AE%80%E5%8D%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>求证：（命题$351$）<br>$$<br>f(n)=\sum^{n-1}_{m=0}\sin(\theta+m\alpha)=\frac{\sin\frac{n\alpha}2}{\sin\frac\alpha2}\sin[\theta+\frac{(n-1)\alpha}2]<br>$$</p></blockquote><p>使用第一数学归纳法进行证明：</p><ul><li><p>当$n=1$时，命题显然成立。</p></li><li><p>设当$n=k$时，命题成立，即：</p><p>​$$<br>f(k)=\sum^{k-1}_{m=0}\sin(\theta+m\alpha)=\frac{\sin\frac{k\alpha}2}{\sin\frac\alpha2}\sin[\theta+\frac{(n-1)\alpha}2]<br>$$</p></li><li><p>当$n=k+1$时，有：<br>$$<br>f(k+1)=f(k)+\sin(\theta+k\alpha)<br>$$<br>观察$f(k+1)$，得到：<br>$$<br>=\frac{\sin\frac{k\alpha}2}{\sin\frac\alpha2}\sin[\theta+\frac{(k-1)\alpha}2]+\sin(\theta+k\alpha)<br>$$</p><p>$$<br>=\frac1{\sin\frac\alpha2}{\sin\frac{k\alpha}2\sin[\theta+\frac{(k-1)\alpha}2]+\sin\frac\alpha2\sin(\theta+k\alpha)}<br>$$</p><p>$$<br>=\frac1{2\sin\frac\alpha2}{[\cos(\theta-\frac\alpha2)-\cos(\theta+k\alpha-\frac\alpha2)]+[\cos(\theta+k\alpha-\frac\alpha2)-\cos(\theta+k\alpha+\frac\alpha2)]}<br>$$</p><p>$$<br>=\frac1{2\sin\frac\alpha2}[\cos(\theta-\frac\alpha2)-\cos(\theta+k\alpha+\frac\alpha2)]<br>$$</p><p>$$<br>=\frac1{2\sin\frac\alpha2}\cdot2\sin(\theta+\frac{k\alpha}2)\sin\frac{(k+1)\alpha}2<br>$$</p><p>$$<br>=\frac{\sin\frac{(k+1)\alpha}2}{\sin\frac\alpha2}\sin(\theta+\frac{k\alpha}2)<br>$$</p><blockquote><p>同理也可以证明：<br>$$<br>g(n)=\sum^{n-1}_{m=0}\cos(\theta+m\alpha)=\frac{\sin\frac{n\alpha}2}{\sin\frac\alpha2}\cos[\theta+\frac{(n-1)\alpha}2]<br>$$<br>​</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝努利不等式的证明</title>
      <link href="/2019/03/26/%E8%B4%9D%E5%8A%AA%E5%88%A9%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/26/%E8%B4%9D%E5%8A%AA%E5%88%A9%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>贝努利不等式是数学中十分重要的不等式：<br>$$<br>1+\sum^n_{i=1}x_i&lt;\prod^n_{i=1}(1+x_i)<br>$$<br>其中$n\geq2$，非零实数$x_1,x_2,\dots,x_n$均大于$-1$且同号。</p><p>证明：使用<strong>第一数学归纳法</strong>进行证明：</p><ul><li><p>当$n=2$时：</p><p>考察不等式左边：<br>$$<br>1+\sum^2_{i=1}x_i=1+x_1+x_2<br>$$<br>考察不等式右边：<br>$$<br>\prod^2_{i=1}(1+x_i)=(1+x_1)(1+x_2)=1+x_1+x_2+x_1x_2<br>$$<br>因为$x_1x_2&gt;0$，所以当$n=2$时，不等式成立。</p></li><li><p>设当$n=k$时不等式成立，即：<br>$$<br>1+\sum^k_{i=1}x_i&lt;\prod^k_{i=1}(1+x_i)<br>$$</p></li><li><p>当$n=k+1$时：</p><p>因为$1+x_{k+1}&gt;0$所以有：<br>$$<br>\prod^{k+1}<em>{i=1}(1+x_i)&gt;(1+\sum^k</em>{i=1}x_i)(1+x_{k+1})<br>$$</p><p>$$<br>=1+\sum^k_{i=1}x_i+(1+\sum^k_{i=1}x_i)x_{k+1}<br>$$</p></li></ul><p>$$<br>=1+\sum^{k+1}<em>{i=1}x_i+(1+\sum^k</em>{i=1}x_i)x_{k+1}<br>$$</p><p>$$</p><blockquote><p>1+\sum^{k+1}_{i=1}x_i<br>$$</p></blockquote><p>因此，当$n=k+1$时，命题成立。</p><p>综上，不等式获证。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道三角恒等式题的证明</title>
      <link href="/2019/03/24/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E6%81%92%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/24/%E4%B8%80%E9%81%93%E4%B8%89%E8%A7%92%E6%81%92%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>求证：<br>$$<br>\prod^7_{k=1}\cos\frac{k\pi}{15}=[\sum^2_{k=0}\cos\frac{(2k+1)\pi}7]^7<br>$$<br>(命题$567$)</p></blockquote><p>先证明一个引理（命题$563$）：<br>$$<br>\prod^{n-1}<em>{i=0}(x^2-2x\cos\frac{i\pi}n+1)=\sum^n</em>{i=1}x^{2(n-i)}<br>$$<br>方程$x^{2n}-1=0$的根是:<br>$$<br>x_k=\cos\frac{k\pi}n+i\sin\frac{k\pi}n(k=0,1,2,\dots,2n-1)<br>$$</p><p>$$<br>\Rightarrow\prod^{2n-1}_{i=0}(x-x_i)\equiv x^{2n}-1<br>$$</p><p>注意到：<br>$$<br>\prod^{2n-1}_{i=0}(x-x_i)<br>$$</p><p>$$<br>=[(x-1)\prod^{n-1}<em>{k=1}(x-\cos\frac{k\pi}n-i\sin\frac{k\pi}n)][(x+1)\prod^{2n-1}</em>{k=n+1}(x-\cos\frac{k\pi}n-i\sin\frac{k\pi}n)]<br>$$</p><p>$$<br>=(x^2-1)\prod^{n-1}_{k=1}[(x-\cos\frac{k\pi}n)^2+\sin^2\frac{k\pi}n]<br>$$</p><p>$$<br>=(x^2-1)\prod^{n-1}_{k=1}(x^2-2x\cos\frac{k\pi}n+1)<br>$$</p><p>$$<br>x^{2n}-1=(x^2-1)\sum^n_{i=1}x^{2(n-i)}<br>$$</p><p>$$<br>\Rightarrow\prod^{n-1}<em>{i=1}(x^2-2x\cos\frac{i\pi}n+1)=\sum^n</em>{i=1}x^{2(n-i)}<br>$$</p><p>再证明一个基本的三角恒等式（命题$564$)：</p><p>由上一个引理：<br>$$<br>\prod^{n-1}<em>{i=1}(x^2-2x\cos\frac{i\pi}n+1)=\sum^n</em>{i=1}x^{2(n-i)}<br>$$<br>令$x=-1$，则有：<br>$$<br>\prod^n_{i=1}\cos\frac{i\pi}{2n+1}=\frac1{x^n}<br>$$<br>现在证明原命题：</p><p>由三角恒等式得：<br>$$<br>\prod^7_{k=1}\cos\frac{k\pi}{15}=\frac1{2^7}<br>$$<br>考察等式右边：<br>$$<br>\sum^2_{k=0}\cos\frac{(2k+1)\pi}7=\cos\frac\pi7+\cos\frac{3\pi}7+\cos\frac{5\pi}7<br>$$</p><p>$$<br>=-(\cos\frac{2\pi}7+\cos\frac{4\pi}7+\cos\frac{6\pi}7)<br>$$</p><p>$$<br>=-\frac{2\sin\frac\pi7\cos\frac{2\pi}7+2\sin\frac\pi7\cos\frac{4\pi}7+2\sin\frac\pi7\cos\frac{6\pi}7}{2\sin\frac\pi7}<br>$$</p><p>$$<br>=-\frac{\sin\frac{3\pi}7-\sin\frac\pi7+\sin\frac{5\pi}7-\sin\frac{3\pi}7+\sin\frac{7\pi}7-\sin\frac{5\pi}7}{2\sin\frac\pi7}<br>$$</p><p>$$<br>=-(-\frac12)=\frac12<br>$$</p><p>因为$\frac1{2^7}=(\frac12)^7$，所以命题得证。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个实用的四点共圆的定理的证明</title>
      <link href="/2019/03/24/%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84%E5%9B%9B%E7%82%B9%E5%85%B1%E5%9C%86%E7%9A%84%E5%AE%9A%E7%90%86%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/24/%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84%E5%9B%9B%E7%82%B9%E5%85%B1%E5%9C%86%E7%9A%84%E5%AE%9A%E7%90%86%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/03/23/5c95ef87d5f63.png" alt="t1.png"></p><p>若：<br>$$<br>PC\sin\alpha+PA\sin\beta=PB\sin(\alpha+\beta)<br>$$<br>则：$P,A,B,C$四点共圆。</p><p>联结$AC$，作$\triangle PAC$的外接圆$\odot O$。$\odot O$交射线$PB$与点$B’$。连$AB’,B’C$。</p><p>设$\odot O$的半径为$R$，则：<br>$$<br>\left{<br>\begin{aligned}<br>AB’ &amp; = &amp; 2R\sin\alpha \<br>B’C &amp; = &amp; 2R\sin\beta \<br>AC &amp; = &amp; 2R\sin(\alpha+\beta)<br>\end{aligned}<br>\right.<br>$$<br>在圆内接四边形$PAB’C$中，根据托勒密定理有：<br>$$<br>PC\cdot AB’+PA\cdot B’C=AC\cdot PB’<br>$$<br>故：<br>$$<br>PC\sin\alpha+PA\sin\beta=PB’\sin(\alpha+\beta)<br>$$<br>所以$PB’=PB$，点$B’$和点$B$重合。</p><p>因此，点$P,A,B,C$四点共圆。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道出自第57届乌克兰数学奥林匹克竞赛(2017-10-8)的不等式证明</title>
      <link href="/2019/03/24/%E4%B8%80%E9%81%93%E5%87%BA%E8%87%AA%E7%AC%AC57%E5%B1%8A%E4%B9%8C%E5%85%8B%E5%85%B0%E6%95%B0%E5%AD%A6%E5%A5%A5%E6%9E%97%E5%8C%B9%E5%85%8B%E7%AB%9E%E8%B5%9B(2017-10-8)%E7%9A%84%E4%B8%8D%E7%AD%89%E5%BC%8F%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/24/%E4%B8%80%E9%81%93%E5%87%BA%E8%87%AA%E7%AC%AC57%E5%B1%8A%E4%B9%8C%E5%85%8B%E5%85%B0%E6%95%B0%E5%AD%A6%E5%A5%A5%E6%9E%97%E5%8C%B9%E5%85%8B%E7%AB%9E%E8%B5%9B(2017-10-8)%E7%9A%84%E4%B8%8D%E7%AD%89%E5%BC%8F%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>已知$a,b,c\in R_+$，证明：<br>$$<br>\sum\frac{(a-b)^2}{ab}+\sum\frac ab\geq\sum\frac{3bc+ac-ab}{2ab+ac}<br>$$</p></blockquote><p>考察不等式左边，有：<br>$$<br>\sum\frac{(a-b)^2}{ab}+\sum\frac ab=\sum(\frac{2a}b+\frac ba)-6<br>$$<br>考察不等式右边，有：<br>$$<br>\sum(\frac{3bc+ac-ab}{2ab+ac}+2)=\sum\frac{3(ab+bc+ca)}{2ab+ac}<br>$$<br>因此，证明题设中的不等式与证明下面的不等式等价：<br>$$<br>\sum(\frac{2a}b+\frac ba)\geq\sum\frac{3(ab+bc+ac)}{2ab+ac}<br>$$<br>注意到：<br>$$<br>(\frac ab+\frac ba+\frac ac)(ab+ab+ac)\geq(a+b+c)^2\geq3(ab+bc+ac)<br>$$</p><p>$$<br>\Rightarrow\frac ab+\frac ba+\frac ca\geq\frac{3(ab+bc+ac)}{2ab+ac}<br>$$</p><p>同理:<br>$$<br>\frac bc+\frac cb+\frac bc\geq\frac{3(ab+bc+ac)}{2ab+ac}<br>,\frac ac+\frac ca+\frac bc\geq\frac{3(ab+bc+ac)}{2ab+ac}<br>$$<br>三式相加，有：<br>$$<br>\sum\frac{(a-b)^2}{ab}+\sum\frac ab\geq\sum\frac{3bc+ac-ab}{2ab+ac}<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道IMO36不等式题的证明</title>
      <link href="/2019/03/23/%E4%B8%80%E9%81%93IMO36%E4%B8%8D%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/"/>
      <url>/2019/03/23/%E4%B8%80%E9%81%93IMO36%E4%B8%8D%E7%AD%89%E5%BC%8F%E9%A2%98%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>设$a,b,c\in R_+,abc=1$证明：<br>$$<br>\sum\frac1{a^3(b+c)}\geq\frac32<br>$$</p></blockquote><p>有：<br>$$<br>\sum[\frac1{a^3(b+c)}+\frac{a(b+c)}4]\geq\sum\frac1a<br>$$<br>故：<br>$$<br>\sum\frac1{a^3(b+c)}\geq\sum\frac1a-\sum\frac{ab}2<br>$$</p><p>$$<br>=\sum\frac1a-\sum\frac1{2c}=\sum\frac1{2a}\geq\frac12\times\frac3{\sqrt[3]{abc}}=\frac32<br>$$</p><p>证毕。</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>班级心情值统计方案</title>
      <link href="/2019/03/21/%E7%8F%AD%E7%BA%A7%E5%BF%83%E6%83%85%E5%80%BC%E7%BB%9F%E8%AE%A1%E6%96%B9%E6%A1%88/"/>
      <url>/2019/03/21/%E7%8F%AD%E7%BA%A7%E5%BF%83%E6%83%85%E5%80%BC%E7%BB%9F%E8%AE%A1%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h1><p>这是一个讲话的<strong>提纲</strong>，因此是不太完整的。对于这次讲话，我秉持的原则是：</p><blockquote><p>打主意，对的多，错的少一点，就行了。不要总是以为自己对，好像真理都在自己手里。——毛泽东</p></blockquote><p>因此我希望大家可以多多讨论，让我们一起来完善这个东西。</p><p>本提纲内的数据全由附录中的程序生成，可能不太科学，还请大家谅解。</p><blockquote><p>我们更要广开言路，打开窗户，不要怕打开窗户可能吹进沙子来。进来一点尘土，坏处有一点，但并不大，而开窗户透空气的利益却很大，我们要从这种利害关系上，看这个问题。——毛泽东</p></blockquote><h1 id="版权说明"><a href="#版权说明" class="headerlink" title="版权说明"></a>版权说明</h1><p>本提纲的全部内容在 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" target="_blank" rel="noopener">CC BY-SA 4.0-署名-相同方式共享 4.0</a>协议之条款下提供，附加条款亦可能应用。</p><h1 id="班级心情值统计方法"><a href="#班级心情值统计方法" class="headerlink" title="班级心情值统计方法"></a>班级心情值统计方法</h1><h2 id="心情状态的规定"><a href="#心情状态的规定" class="headerlink" title="心情状态的规定"></a>心情状态的规定</h2><p>为了使得统计顺利进行，我们规定下面三种心情状态：</p><ul><li>开心（符号 $\checkmark$）</li><li>一般（符号$\bigcirc$）</li><li>不好（符号$\times$）</li></ul><h2 id="统计方法"><a href="#统计方法" class="headerlink" title="统计方法"></a>统计方法</h2><p>建议使用<strong>普查</strong>的统计方法。心理委员应当向班级管理机构索要班级同学的名单（成绩单），然后一一进行统计。</p><p>统计时，应当对样本进行询问：</p><blockquote><p>你今天开心吗？</p></blockquote><p>得到回答后，迅速辨别回答属于哪一个心情状态。如果样本的回答十分含糊，应当告知心情状态的分类，使其自己选择。</p><p>当样本在接受调查时出现异常表现时，应当注意。</p><h3 id="关于抽样调查"><a href="#关于抽样调查" class="headerlink" title="关于抽样调查"></a>关于抽样调查</h3><p>抽样调查不被推荐。但是我们需要了解一下如何科学地使用抽样调查来获取班级同学的心情状态。</p><p>首先，先选定样本数量。假设下面是某班的人数：<br>$$<br>\left{<br>\begin{aligned}<br>\text{男生} &amp; = &amp; 19 \<br>\text{女生} &amp; = &amp; 25 \<br>\text{总人数} &amp; = &amp; 44<br>\end{aligned}<br>\right.<br>$$<br>那么我们可以选择统计$12$个男生，$15$个女生。在空间上，还应该注意样本的分布应当满足<strong>尽可能的离散性</strong>。</p><h3 id="关于心情状态统计结果的整理"><a href="#关于心情状态统计结果的整理" class="headerlink" title="关于心情状态统计结果的整理"></a>关于心情状态统计结果的整理</h3><p>假如我们统计到了下面的数据：</p><table><thead><tr><th align="center">组别/状态</th><th align="center">开心</th><th align="center">一般</th><th align="center">不好</th></tr></thead><tbody><tr><td align="center">男生</td><td align="center">$16$</td><td align="center">$9$</td><td align="center">$13$</td></tr><tr><td align="center">女生</td><td align="center">$3$</td><td align="center">$1$</td><td align="center">$2$</td></tr><tr><td align="center">总</td><td align="center">$19$</td><td align="center">$10$</td><td align="center">$15$</td></tr></tbody></table><p>我们需要计算的数据有：</p><ul><li>比值</li></ul><p>应当分别为每一组计算每一项所占的比值（<strong>保留两位小数</strong>）：</p><table><thead><tr><th align="center">组别/状态</th><th align="center">开心-比</th><th align="center">一般-比</th><th align="center">不好-比</th></tr></thead><tbody><tr><td align="center">男生</td><td align="center">$16-42.11%$</td><td align="center">$9-23.68%$</td><td align="center">$13-34.21%$</td></tr><tr><td align="center">女生</td><td align="center">$3-50.00%$</td><td align="center">$1-16.67%$</td><td align="center">$2-33.33%$</td></tr><tr><td align="center">总</td><td align="center">$19-43.18%$</td><td align="center">$10-22.73%$</td><td align="center">$15-34.09%$</td></tr></tbody></table><p>如果条件允许，还可以画一个<strong>蛋糕</strong>来直观地体现班级心情状态的分布情况：</p><p><img src="https://i.loli.net/2019/03/20/5c91f47690357.png" alt="class.png"></p><p>同理，也可以绘制男生女生的心情状态分布情况的蛋糕：</p><p><img src="https://i.loli.net/2019/03/20/5c91f4883d10a.png" alt="boy.png"></p><p><img src="https://i.loli.net/2019/03/20/5c91f488517af.png" alt="girl.png"></p><h2 id="心情值的计算方法"><a href="#心情值的计算方法" class="headerlink" title="心情值的计算方法"></a>心情值的计算方法</h2><p>为了计算心情值，我们赋予三种心情状态以不同的<strong>权值</strong>：</p><ul><li>开心（符号 $\checkmark$）：$2$</li><li>一般（符号$\bigcirc$）：$1$</li><li>不好（符号$\times$）： $0$</li></ul><p>我们赋予心情值以一定的数学意义。从某种程度上来说，所谓心情值就是<strong>数学期望</strong>。</p><p>依然以上面的那个统计结果为例：</p><table><thead><tr><th align="center">组别/状态</th><th align="center">开心</th><th align="center">一般</th><th align="center">不好</th></tr></thead><tbody><tr><td align="center">男生</td><td align="center">$16$</td><td align="center">$9$</td><td align="center">$13$</td></tr><tr><td align="center">女生</td><td align="center">$3$</td><td align="center">$1$</td><td align="center">$2$</td></tr><tr><td align="center">总</td><td align="center">$19$</td><td align="center">$10$</td><td align="center">$15$</td></tr></tbody></table><p>那么，我们可以根据心情值的计算公式：</p><p>$$<br>E=\frac{\sum^{|a|}_{i=0}a_id_i}{|a|}<br>$$<br>计算得：<br>$$<br>\left{<br>\begin{aligned}<br>E_\text{男生} &amp; = &amp; \frac{16\times2+9\times1+13\times0}{38}\approx1.08 \<br>E_\text{女生} &amp; = &amp; \frac{3\times2+1\times1+2\times0}{6}\approx1.17 \<br>E_\text{总} &amp; = &amp; \frac{19\times2+10\times1+15\times0}{44}\approx1.09<br>\end{aligned}<br>\right.<br>$$</p><h2 id="追踪性质的数据观察"><a href="#追踪性质的数据观察" class="headerlink" title="追踪性质的数据观察"></a>追踪性质的数据观察</h2><p>依然使用心情值的概念来考察样本的心情状态。假设某同学的历次统计情况是这样的：</p><p>$\checkmark,\checkmark,\checkmark,\times,\checkmark$</p><p>那么计算他的心情值为：$E=\frac{4\times2+1\times0}5=1.6$</p><p>再使用方差来考察样本的心情状态的稳定程度：</p><p>$$<br>S^2=\frac15[(2-1.6)^2+(2-1.6)^2+(2-1.6)^2+(0-1.6)^2+(2-1.6)^2]=3.2<br>$$</p><h1 id="大数据的宏观标准"><a href="#大数据的宏观标准" class="headerlink" title="大数据的宏观标准"></a>大数据的宏观标准</h1><p>办公室应当在一定的时间内计算出<strong>全校的</strong>心情值状况。这个心情值将被作为<strong>标准</strong>进行使用。</p><p>例如，有三个班级的心情值结果是这样的：</p><table><thead><tr><th align="center">班级</th><th align="center">$E_\text{男生}$</th><th align="center">$E_\text{女生}$</th><th align="center">$E_\text{总}$</th></tr></thead><tbody><tr><td align="center">$1$</td><td align="center">$1.08$</td><td align="center">$1.17$</td><td align="center">$1.09$</td></tr><tr><td align="center">$2$</td><td align="center">$0.40$</td><td align="center">$1.56$</td><td align="center">$0.95$</td></tr><tr><td align="center">$3$</td><td align="center">$0.62$</td><td align="center">$0.99$</td><td align="center">$0.97$</td></tr></tbody></table><p>那么，我们可以计算$\bar E_\text{总}$:</p><p>$$<br>\bar E_\text{总}=\frac{1.09+0.95+0.97}3\approx1.00<br>$$<br>因为$E_1&gt;\bar E$，所以一班的心情水平超过平均水平——意味着一班同学的总体心情状态良好。</p><p>反之，$E_2,E_3&lt;\bar E$，因此这两个班级的心情水平较差。</p><p>同理，我们也可以计算$$\bar E_\text{男生}$$和$\bar E_\text{女生}$。</p><h2 id="长期的数据整理"><a href="#长期的数据整理" class="headerlink" title="长期的数据整理"></a>长期的数据整理</h2><p>办公室应当做好数据的<strong>整理工作</strong>。建议以<strong>一星期为一个基本测评周期</strong>，即每周计算一次$\bar E$（三组）。</p><p>为了使数据更加可信，建议使用下面的整理方法：</p><p>首先，记录下该组新数据的第$k$组数据。</p><p>那么:<br>$$<br>\bar E_{new}=\frac{\bar E \times (k-1)+E}k<br>$$<br>办公室应当使用<strong>数据库技术</strong>对我校学生心情值数据进行长期的维护。</p><p>下面是统计图的示范：</p><p><img src="https://i.loli.net/2019/03/20/5c91f4b1dac7b.png" alt="1.png"></p><p><img src="https://i.loli.net/2019/03/20/5c91f4b20dbaa.png" alt="3.png"></p><p>统计分为下面几种统计：</p><ul><li>周阶段统计</li><li>月阶段统计</li><li>年阶段统计</li></ul><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="心情值样例数据生成"><a href="#心情值样例数据生成" class="headerlink" title="心情值样例数据生成"></a>心情值样例数据生成</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixed</span><span class="params">(<span class="keyword">double</span>&amp;,<span class="keyword">double</span>&amp;,<span class="keyword">double</span>&amp;)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"title Random v1.0.0(dev.milarodvia.macrohard[github[x]])"</span>);</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Please enter a statistical sample size:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> gn=rand()%(n/<span class="number">2</span>)+<span class="number">1</span>,bn=n-gn;</span><br><span class="line"><span class="keyword">int</span> b[bn],g[gn],c[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;,bc[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;,gc[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,bn);</span><br><span class="line"><span class="built_in">memset</span>(g,<span class="number">0</span>,gn);</span><br><span class="line"><span class="comment">//!Warning!:If the array `int c[]`,'int bc[]` and 'int gc[]` is not set to 0, then an irreversible data error will occur!</span></span><br><span class="line"><span class="comment">//c[0] stands for "statistics with a weight of 0", and the rest is the same.</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Prepare for data generation(for boy group)... ..."</span>);</span><br><span class="line">_sleep(<span class="number">100</span>);<span class="comment">//sleep for a while.</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bn;++i)<span class="comment">//range(i,gn)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Generating Group %d data... ...\n"</span>,i+<span class="number">1</span>);</span><br><span class="line">++c[b[i]=rand()%<span class="number">3</span>];</span><br><span class="line">++bc[b[i]];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"[%d|boy|(c[b[i]]=%d)]:%d.\n"</span>,i+<span class="number">1</span>,c[b[i]],b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Prepare for data generation(for boy group)... ..."</span>);</span><br><span class="line">_sleep(<span class="number">100</span>);<span class="comment">//sleep for a while.</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;gn;++i)<span class="comment">//range(i,gn)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Generating Group %d data... ...\n"</span>,i+<span class="number">1</span>);</span><br><span class="line">++c[g[i]=rand()%<span class="number">3</span>];</span><br><span class="line">++gc[g[i]];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"[%d|girl|(c[g[i]]=%d)]:%d.\n"</span>,i+<span class="number">1</span>,c[g[i]],g[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"done."</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Prepare to calculate parameters... ..."</span>);</span><br><span class="line">_sleep(<span class="number">100</span>);<span class="comment">//sleep for a while.</span></span><br><span class="line"><span class="keyword">double</span> d0,d1,d2;</span><br><span class="line">d0=c[<span class="number">0</span>]*<span class="number">1.0</span>/n*<span class="number">1.0</span>;</span><br><span class="line">d1=c[<span class="number">1</span>]*<span class="number">1.0</span>/n*<span class="number">1.0</span>;</span><br><span class="line">d2=c[<span class="number">2</span>]*<span class="number">1.0</span>/n*<span class="number">1.0</span>;</span><br><span class="line">fixed(d0,d1,d2);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"The overall mood state distribution of whole class:"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d|d0=%.4lf\t%d|d1=%.4lf\t%d|d2=%.4lf\n"</span>,c[<span class="number">0</span>],d0,c[<span class="number">1</span>],d1,c[<span class="number">2</span>],d2);</span><br><span class="line"><span class="comment">//printf("The mood value of whole class:%.4lf\n",(c[2]*2+c[1])/n*1.0);</span></span><br><span class="line">d0=bc[<span class="number">0</span>]*<span class="number">1.0</span>/bn;</span><br><span class="line">d1=bc[<span class="number">1</span>]*<span class="number">1.0</span>/bn;</span><br><span class="line">d2=bc[<span class="number">2</span>]*<span class="number">1.0</span>/bn;</span><br><span class="line">fixed(d0,d1,d2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The overall mood state distribution of %d boys:\n"</span>,bn);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d|d0=%.4lf\t%d|d1=%.4lf\t%d|d2=%.4lf\n"</span>,bc[<span class="number">0</span>],d0,b[<span class="number">1</span>],d1,bc[<span class="number">2</span>],d2);</span><br><span class="line"><span class="comment">//printf("The mood value of boys:%.4lf\n",(bc[2]*2+bc[1])/bn*1.0);</span></span><br><span class="line">d0=gc[<span class="number">0</span>]*<span class="number">1.0</span>/gn;</span><br><span class="line">d1=gc[<span class="number">1</span>]*<span class="number">1.0</span>/gn;</span><br><span class="line">d2=gc[<span class="number">2</span>]*<span class="number">1.0</span>/gn;</span><br><span class="line">fixed(d0,d1,d2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The overall mood state distribution of %d girls:\n"</span>,gn);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d|d0=%.4lf\t%d|d1=%.4lf\t%d|d2=%.4lf\n"</span>,gc[<span class="number">0</span>],d0,gc[<span class="number">1</span>],d1,gc[<span class="number">2</span>],d2);</span><br><span class="line"><span class="comment">//printf("The mood value of girls:%.4lf\n",(gc[2]*2+gc[1])/gn*1.0);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixed</span><span class="params">(<span class="keyword">double</span>&amp; d0,<span class="keyword">double</span>&amp; d1,<span class="keyword">double</span>&amp; d2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> s=<span class="number">1.0</span>; <span class="comment">//the standard.</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>]; <span class="comment">//the buffer</span></span><br><span class="line"><span class="built_in">sprintf</span>(buf,<span class="string">"%.4lf %.4lf %.4lf"</span>,d0,d1,d2);</span><br><span class="line"><span class="built_in">sscanf</span>(buf,<span class="string">"%lf%lf%lf"</span>,&amp;d0,&amp;d1,&amp;d2);</span><br><span class="line"><span class="keyword">double</span> t=d0+d1+d2;</span><br><span class="line"><span class="keyword">if</span>(t==s)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(t&lt;s)d1+=(s-t); <span class="comment">//try to fix the bad data</span></span><br><span class="line"><span class="keyword">else</span> d1-=(t-s); <span class="comment">//another way to fix the bad data</span></span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据样例"><a href="#数据样例" class="headerlink" title="数据样例"></a>数据样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">Please enter a statistical sample size:44</span><br><span class="line">Prepare for data generation(for boy group)... ...</span><br><span class="line">Generating Group 1 data... ...</span><br><span class="line">[1|boy|(c[b[i]]=1)]:0.</span><br><span class="line">Generating Group 2 data... ...</span><br><span class="line">[2|boy|(c[b[i]]=1)]:2.</span><br><span class="line">Generating Group 3 data... ...</span><br><span class="line">[3|boy|(c[b[i]]=1)]:1.</span><br><span class="line">Generating Group 4 data... ...</span><br><span class="line">[4|boy|(c[b[i]]=2)]:0.</span><br><span class="line">Generating Group 5 data... ...</span><br><span class="line">[5|boy|(c[b[i]]=2)]:2.</span><br><span class="line">Generating Group 6 data... ...</span><br><span class="line">[6|boy|(c[b[i]]=3)]:0.</span><br><span class="line">Generating Group 7 data... ...</span><br><span class="line">[7|boy|(c[b[i]]=3)]:2.</span><br><span class="line">Generating Group 8 data... ...</span><br><span class="line">[8|boy|(c[b[i]]=2)]:1.</span><br><span class="line">Generating Group 9 data... ...</span><br><span class="line">[9|boy|(c[b[i]]=4)]:0.</span><br><span class="line">Generating Group 10 data... ...</span><br><span class="line">[10|boy|(c[b[i]]=3)]:1.</span><br><span class="line">Generating Group 11 data... ...</span><br><span class="line">[11|boy|(c[b[i]]=4)]:1.</span><br><span class="line">Generating Group 12 data... ...</span><br><span class="line">[12|boy|(c[b[i]]=4)]:2.</span><br><span class="line">Generating Group 13 data... ...</span><br><span class="line">[13|boy|(c[b[i]]=5)]:2.</span><br><span class="line">Generating Group 14 data... ...</span><br><span class="line">[14|boy|(c[b[i]]=6)]:2.</span><br><span class="line">Generating Group 15 data... ...</span><br><span class="line">[15|boy|(c[b[i]]=7)]:2.</span><br><span class="line">Generating Group 16 data... ...</span><br><span class="line">[16|boy|(c[b[i]]=5)]:0.</span><br><span class="line">Generating Group 17 data... ...</span><br><span class="line">[17|boy|(c[b[i]]=5)]:1.</span><br><span class="line">Generating Group 18 data... ...</span><br><span class="line">[18|boy|(c[b[i]]=6)]:0.</span><br><span class="line">Generating Group 19 data... ...</span><br><span class="line">[19|boy|(c[b[i]]=7)]:0.</span><br><span class="line">Generating Group 20 data... ...</span><br><span class="line">[20|boy|(c[b[i]]=6)]:1.</span><br><span class="line">Generating Group 21 data... ...</span><br><span class="line">[21|boy|(c[b[i]]=8)]:0.</span><br><span class="line">Generating Group 22 data... ...</span><br><span class="line">[22|boy|(c[b[i]]=9)]:0.</span><br><span class="line">Generating Group 23 data... ...</span><br><span class="line">[23|boy|(c[b[i]]=8)]:2.</span><br><span class="line">Generating Group 24 data... ...</span><br><span class="line">[24|boy|(c[b[i]]=7)]:1.</span><br><span class="line">Generating Group 25 data... ...</span><br><span class="line">[25|boy|(c[b[i]]=9)]:2.</span><br><span class="line">Generating Group 26 data... ...</span><br><span class="line">[26|boy|(c[b[i]]=10)]:2.</span><br><span class="line">Generating Group 27 data... ...</span><br><span class="line">[27|boy|(c[b[i]]=11)]:2.</span><br><span class="line">Generating Group 28 data... ...</span><br><span class="line">[28|boy|(c[b[i]]=10)]:0.</span><br><span class="line">Generating Group 29 data... ...</span><br><span class="line">[29|boy|(c[b[i]]=11)]:0.</span><br><span class="line">Generating Group 30 data... ...</span><br><span class="line">[30|boy|(c[b[i]]=12)]:0.</span><br><span class="line">Generating Group 31 data... ...</span><br><span class="line">[31|boy|(c[b[i]]=13)]:0.</span><br><span class="line">Generating Group 32 data... ...</span><br><span class="line">[32|boy|(c[b[i]]=14)]:0.</span><br><span class="line">Generating Group 33 data... ...</span><br><span class="line">[33|boy|(c[b[i]]=8)]:1.</span><br><span class="line">Generating Group 34 data... ...</span><br><span class="line">[34|boy|(c[b[i]]=12)]:2.</span><br><span class="line">Generating Group 35 data... ...</span><br><span class="line">[35|boy|(c[b[i]]=13)]:2.</span><br><span class="line">Generating Group 36 data... ...</span><br><span class="line">[36|boy|(c[b[i]]=9)]:1.</span><br><span class="line">Generating Group 37 data... ...</span><br><span class="line">[37|boy|(c[b[i]]=15)]:0.</span><br><span class="line">Generating Group 38 data... ...</span><br><span class="line">[38|boy|(c[b[i]]=16)]:0.</span><br><span class="line">Prepare for data generation(for boy group)... ...</span><br><span class="line">Generating Group 1 data... ...</span><br><span class="line">[1|girl|(c[g[i]]=10)]:1.</span><br><span class="line">Generating Group 2 data... ...</span><br><span class="line">[2|girl|(c[g[i]]=14)]:2.</span><br><span class="line">Generating Group 3 data... ...</span><br><span class="line">[3|girl|(c[g[i]]=17)]:0.</span><br><span class="line">Generating Group 4 data... ...</span><br><span class="line">[4|girl|(c[g[i]]=15)]:2.</span><br><span class="line">Generating Group 5 data... ...</span><br><span class="line">[5|girl|(c[g[i]]=18)]:0.</span><br><span class="line">Generating Group 6 data... ...</span><br><span class="line">[6|girl|(c[g[i]]=19)]:0.</span><br><span class="line">done.</span><br><span class="line">Prepare to calculate parameters... ...</span><br><span class="line">The overall mood state distribution of whole class:</span><br><span class="line">19|d0=0.4318    10|d1=0.2273    15|d2=0.3409</span><br><span class="line">The overall mood state distribution of 38 boys:</span><br><span class="line">16|d0=0.4211    2|d1=0.2368     13|d2=0.3421</span><br><span class="line">The overall mood state distribution of 6 girls:</span><br><span class="line">3|d0=0.5000     1|d1=0.1667     2|d2=0.3333</span><br></pre></td></tr></table></figure><h2 id="建议使用新的表格"><a href="#建议使用新的表格" class="headerlink" title="建议使用新的表格"></a>建议使用新的表格</h2><table><thead><tr><th align="center">组别/项目</th><th align="center">开心人数-比</th><th align="center">一般人数-比</th><th align="center">不开心人数-比</th><th align="center">心情值</th></tr></thead><tbody><tr><td align="center">男生</td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%.2lf</code></td></tr><tr><td align="center">女生</td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%.2lf</code></td></tr><tr><td align="center">总</td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%d-%.2lf\%</code></td><td align="center"><code>%.2lf</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 实践资料 </category>
          
          <category> 心理学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资本主义劳动生产的秘密</title>
      <link href="/2018/12/04/%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%E5%8A%B3%E5%8A%A8%E7%94%9F%E4%BA%A7%E7%9A%84%E7%A7%98%E5%AF%86/"/>
      <url>/2018/12/04/%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%E5%8A%B3%E5%8A%A8%E7%94%9F%E4%BA%A7%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>在资本主义世界之中，劳动生产有着许多奇怪的特点。众所周知，这种生产是以拥有生产资料的资本家与除劳动力外一无所有的无产者所主导的。那么，在这种充斥着整个资本主义世界的劳动生产模式之中，有着什么样的秘密呢？</p><p>我们先来看看，这种生产所产出的东西是什么：汽车，铅笔，面包……总之，是商品。<strong>商品是一种可以满足人的某种欲望的物体。</strong>这种欲望的性质如何，例如是由胃产生的还是由幻想产生的，与问题是无关的。<strong>欲望包含着需要</strong>，这是精神的食欲，就像肉体的饥饿一样自然。这种满足欲望的方式如何，例如是作为生活资料，即消费品来直接满足或是作为生产资料来间接满足，与问题也是无关的。</p><p><strong>每一种有用的物体，如面包，衣服等等，是许多属性的总和，因此可以被应用在很多不同的方面。</strong>列如衣服既可以用来保暖御寒，也可以被当做燃料烧掉。发现这些属性，从而发现物体的多种使用方式，是历史的事情，我们不关心这一过程。</p><p><strong>物体的有用性使物体成为使用价值。</strong>但这种使用价值是取决于商品本身的属性的，离开了具体的商品就不存在。所以，<strong>商品本身就是使用价值，财物。</strong>在考虑使用价值时，我们常常要以量为前提，因为一顿铁比铁要更有意义。</p><p>一切生产活动都是生产资料和劳动力的结合，因此，资本家若是想进行生产，就必须支付生产资料的价值与劳动力的价值。<strong>生产资料的价值，体现为为生产生产资料所累积耗费的劳动力的死的价值。而劳动力的价值则体现在维持劳动力再生所需的生活资料的最低额。</strong></p><p>结合商品来看，生产过程中消耗的生产资料的价值与商品价值中生产资料的部分的价值是固定的，不变的。而劳动力体创造出的，固化在商品价值中的价值却是活的，可变的。也就是说，由劳动创造出来的价值和生产过程中耗费的劳动力的价值可以不对等。马克思主义政治经济学将这一多出的价值部分称为<strong>剩余价值</strong>。</p><p>举一个例子。假设一批商品值$5000$元，其中含生产资料部分$3000$元和劳动力部分$2000$元。不过，在工作的这一段时间内，维持工人的基本生活却只要价值$1200$元的生活资料。这$800$元的剩余价值也正是资本家所谓利润的来源。</p><p><strong>剩余价值是工人创造的。</strong>而资本家却凭借着对生产资料的占有而无偿占有了这一部分。这样的无偿占有也就是马克思主义语境下的<strong>剥削</strong>。</p><p>反应在现实中，占有各类企业的资本家越来越富，他们挥金如土，享用着各种社会优质资源；而以出卖劳动力为生的工人却相对越来越穷，他们只能拿着微薄的工资勉强维生。先不说这种无偿占有是否公平合理——讲人道主义尽管慷慨激昂，却缺乏实际作用。让我们来一起分析一下这种无偿占有所导致的<strong>一般性的结果</strong>。</p><p><strong>经济是社会的基础。</strong>在资本主义市场中，卖家的主体是资本家，而买家的主体则是工人。但是，<strong>工人们拿着被剥削后的工资，显然是不能买下市场上所有的商品的</strong>。资本家为了进行下一轮生产，也不可能将所有的货币用于购买商品。这样，市场上必然会有大量的商品无法转换为货币，我们称之为<strong>过剩商品</strong>。这时候的情况，就是<strong>购买力与生产力的不平衡</strong>，也就是说，<strong>生产力过剩了</strong>。</p><p>在实际的生产活动中，资本家对剩余价值的占有虽然算不上是什么损失，但是生产资料和劳动力的价值确实真真切切地损失掉了。因此，资本主义生产越是进行，也就有越来越多的商品无法得到消费，越来越多的价值被浪费。这个恶性循环周而复始，所导致的必然后果就是：<strong>经济危机</strong>。</p><p>在经济危机中，企业破产倒闭，大量失业工人被抛向街头，到处都是经济崩溃的悲惨景象。自十九世纪初英国第一次经济危机后，这样的经济危机已经愈演愈烈重复了数十次。这个周期至今还在运转。更糟糕的是，随着资本主义世界市场的建立与发展，<strong>经济危机危害的不仅仅是单个资本主义国家，甚至还会危及到整个资本主义世界。</strong></p><p>面对着这种危及社会全领域的毁灭性的灾难，资产阶级用什么办法来克服这种危机呢？一方面不得不<strong>消灭大量生产力</strong>，另一方面<strong>夺取新的市场</strong>，或更加<strong>彻底地利用旧的市场</strong>。这究竟是怎样的一种办法呢？这不过是资产阶级准备更全面更猛烈的危机的办法，不过是<strong>使防止危机的手段越来越少的办法</strong>。</p><p>面对经济危机，资本家宁愿把商品销毁掉也不愿让出自己无偿占有的剩余价值。</p><p>面对资本主义社会，各色改良主义喋喋不休，而马克思主义却道出了最根本的问题：<strong>生产的社会化和生产资料的私人占有是资本主义社会的根本矛盾。</strong>这种矛盾所带来的，出来经济危机，还有资本主义社会的必然灭亡与社会主义革命的必然胜利。</p><p>资产阶级的必然灭亡与无产阶级的必然胜利这一论点已经超出了本文的讨论范围，笔者将在《为什么说英特纳雄耐尔就一定要实现》中论述。</p><blockquote><p>全世界无产者，联合起来！</p></blockquote><p>——献给伟大的无产阶级战士王鹏一同志</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
          <category> 马克思主义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 马克思主义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LGP1601-A+B Problem（高精）</title>
      <link href="/2018/11/18/LGP1601-A-B-Problem%EF%BC%88%E9%AB%98%E7%B2%BE%EF%BC%89/"/>
      <url>/2018/11/18/LGP1601-A-B-Problem%EF%BC%88%E9%AB%98%E7%B2%BE%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>使用了Java中的BigDecimal来进行高精度计算，下面是代码：（Java党的福利qwq）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span>(input.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            BigDecimal a= input.nextBigDecimal();</span><br><span class="line">            BigDecimal b=input.nextBigDecimal();</span><br><span class="line">            BigDecimal c= a.add(b);</span><br><span class="line">            BigDecimal d= c.stripTrailingZeros();</span><br><span class="line">            String s;</span><br><span class="line">            s=d.toPlainString();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVA11809-Floating Point Numbers</title>
      <link href="/2018/11/18/UVA11809-Floating-Point-Numbers/"/>
      <url>/2018/11/18/UVA11809-Floating-Point-Numbers/</url>
      
        <content type="html"><![CDATA[<p>这是一道很考验数学素质的一道题目。但是作为一名<del>优秀</del>每天划水的OIer，这道题是不难的。来看我的分析：</p><p>因为数字很大，因此我们可以求以$10$为底的对数:$lgv=lg(x^{M+1}-1)-(M+) \times lg2+(2^E-1) \times lg2=lgA+B$。</p><p>根据题意可以推算出最大值$v_max=(1-\frac{1}{2^{M+1} })\times 2^{ {2^E}-1}=A\times 10^B$。</p><p>然后我们遍历所有可能的$M$，根据上面推导出来的公式求$E$的值，然后再利用$E$和$M$求出$lgv$和输入的值进行比较，如果相等，说明$M$和$E$就是所求的值。做两个浮点数相等判断的时候，我们需要设置一个误差常量$eps$,具体大小要根据具体的题目来定。</p><p>完整的程序(<code>c++11</code>)如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EPS=<span class="number">1e-6</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> line[<span class="number">256</span>];</span><br><span class="line"><span class="keyword">double</span> lg2=<span class="built_in">log10</span>(<span class="number">2</span>),a,v;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,line)==<span class="number">1</span>&amp;&amp;<span class="built_in">strcmp</span>(line,<span class="string">"0e0"</span>)!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">*<span class="built_in">strchr</span>(line,<span class="string">'e'</span>)=<span class="string">' '</span>;</span><br><span class="line"><span class="built_in">sscanf</span>(line,<span class="string">"%lf%d"</span>,&amp;a,&amp;b);</span><br><span class="line">v=<span class="built_in">log10</span>(a)+b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">1</span>;m&lt;=<span class="number">10</span>;++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> mhe=round(<span class="built_in">log10</span>((v+m*lg2-<span class="built_in">log10</span>(<span class="built_in">pow</span>(<span class="number">2</span>,m)<span class="number">-1</span>))/lg2+<span class="number">1</span>)/lg2);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">fabs</span>(((<span class="number">1</span>&lt;&lt;mhe)<span class="number">-1</span>)*lg2+<span class="built_in">log10</span>(<span class="built_in">pow</span>(<span class="number">2</span>,m)<span class="number">-1</span>)-m*lg2-v)&lt;=EPS)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,m<span class="number">-1</span>,mhe);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树初赛知识讲义</title>
      <link href="/2018/11/18/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%9D%E8%B5%9B%E7%9F%A5%E8%AF%86%E8%AE%B2%E4%B9%89/"/>
      <url>/2018/11/18/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%9D%E8%B5%9B%E7%9F%A5%E8%AF%86%E8%AE%B2%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h1 id="树和二叉树的定义"><a href="#树和二叉树的定义" class="headerlink" title="树和二叉树的定义"></a>树和二叉树的定义</h1><p>在了解二叉树的定义之前，我们必须先掌握树的定义。</p><h2 id="树的定义"><a href="#树的定义" class="headerlink" title="树的定义"></a>树的定义</h2><p>树（tree）是$n(n\geq 0)$个结点的<strong>有限集</strong>。在任意的一棵非空树中：</p><ul><li>有且只有一个被称为<strong>根</strong>（root）的结点</li><li>当$n&gt;1$时，除了根结点之外的结点可以分为$m(m&gt;0)$个互不相交的有限集$T_1,T_2,\dots,T_m$，其中每一个集合又是一棵树，我们称它们为<strong>根结点的子树</strong>。</li></ul><p><img src="https://i.loli.net/2018/10/01/5bb215d6ae4c9.png" alt="1.png"></p><p>例如，上图中的(a)就不是一棵树，因为它没有根结点。而(b)则是一棵只有一个根结点的树。(c)就是一棵比较复杂的树了——它具有$13$个结点，其中$A$是树根，其余的结点被分为<strong>三个</strong>互不相交的子集:$T_1={B,E,F,K,L},T_2={C,G},T_3={D,H,I,J,M}$。$T_1,T_2$和$T_3$都是根$A$的子树，且本身也是一棵树。</p><p>在根的子树中，依然存在子树。这里不再详细说明根的子树的子树的情况……大家需要知道的是，一直被分下去的子树最终只会是一个结点——到那个时候，也就不再存在子树的子树了。我们把没有子树的结点叫做<strong>叶子结点</strong>。</p><h2 id="二叉树的定义"><a href="#二叉树的定义" class="headerlink" title="二叉树的定义"></a>二叉树的定义</h2><p>二叉树（binary tree)是另外一种树型结构。二叉树也是树，只不过比较特殊——二叉树的每个结点至多只有两棵子树。（即二叉树中不存在度大于二的结点），并且，二叉树的子树有左右之分，其次序是不可以随意颠倒的。</p><p>二叉树有下面的五种基本形态：</p><ul><li>空树（即没有根结点的不相交有限集合，可以理解为什么都没有）</li><li>只有一个根结点的二叉树</li><li>有右子树的二叉树</li><li>有左子树的二叉树</li><li>左右子树都有的二叉树</li></ul><p>树的相关术语也同样使用于二叉树。</p><h1 id="树的表现方法"><a href="#树的表现方法" class="headerlink" title="树的表现方法"></a>树的表现方法</h1><p>树的结果定义是一个<strong>递归的定义</strong>，即在树的定义中又运用到了树的概念，这蕴含了树固有的特性。（注意，这点将为日后写关于树的程序提供递归的理论依据）。其实，除了我们常见的结点表示法，树还有很多其他的表示方法，这里介绍两种。</p><h2 id="括号表示法"><a href="#括号表示法" class="headerlink" title="括号表示法"></a>括号表示法</h2><p>比如下面的这颗树：</p><p><img src="https://i.loli.net/2018/10/01/5bb166995e781.png" alt="1.png"></p><p>用括号表示法表示出来即为：<code>A(B(E,F),C,D(G,H(J,K),I))</code></p><p>可以看出，所谓括号表示法只不过是把所有的子树层次给表示出来罢了。</p><h2 id="维恩图表示法"><a href="#维恩图表示法" class="headerlink" title="维恩图表示法"></a>维恩图表示法</h2><p>依然以上面的树为例，用维恩图表示法表示出来的树大概长这样：</p><p><img src="https://i.loli.net/2018/10/01/5bb1679312928.png" alt="1.png"></p><p>同样也是对子树的层次的描述。</p><h1 id="树结构中的术语"><a href="#树结构中的术语" class="headerlink" title="树结构中的术语"></a>树结构中的术语</h1><p>树的<strong>结点</strong>包含一个数据元素和若干个指向其子树的分支。结点拥有的子树数称为<strong>结点的度</strong>（degree)。</p><p><img src="https://i.loli.net/2018/10/01/5bb215d6ae4c9.png" alt="1.png"></p><p>例如，在树(c)中，$A$的度为$3$，$C$的度为$1$，$F$的度为$0$。度为$0$的结点称为<strong>叶子结点</strong>或<strong>终端节点</strong>（也有直接称其为“叶子”的）。在树(c)中，$K,L,F,G,M,I,J$都是树的叶子结点。相应地，度不为$0$的结点被称作是<strong>分支结点</strong>或<strong>非终端节点</strong>。除根结点外，分支结点也被称作是<strong>内部结点</strong>。<strong>树的度</strong>是树内各节点的度的最大值。树(c)的度为$3$。结点的子树叫做该结点的<strong>孩子</strong>(child)或<strong>后代</strong>或<strong>子孙</strong>（有时也叫<strong>后继</strong>），相应地，该结点称为孩子的<strong>父亲</strong>(parent)或<strong>祖先</strong>（有时也叫<strong>前驱</strong>）。例如，在树(c)中，$D$为$A$的子树$T_3$的根，则$D$是$A$的孩子，而$A$则是$D$的父亲。同一个父亲的孩子之间互称<strong>兄弟</strong>(sibling)。例如，在树(c)中，$H,I$和$J$互为兄弟。</p><p>结点的<strong>层次</strong>(level)从根结点定义起，根为第一层，根的孩子为第二层——若某结点在第$l$层，则其子树的根就在第$l+1$层。父亲在同一层的结点互为<strong>堂兄弟</strong>。例如，在树(c)中，$G$和$E,F,H,I,J$互为堂兄弟。树中结点的最大层称为树的<strong>深度</strong>(depth)或<strong>高度</strong>。树(c)的深度为$4$。</p><p>如果将树中结点的各子树看成从左至右是有次序的（即不能互换位置），则称该树为<strong>有序树</strong>，否则称其为<strong>无序树</strong>。在有序树中，最左边的子树的根称为树的第一个孩子，最右边的子树的根称为树的最后一个孩子。</p><p><strong>森林</strong>(forest)是$m(m\geq0)$棵互不相交的树的集合。对数中每个结点而言，其子树的集合即为森林。由此，也可以用森林和数相互递归的定义来描述树。</p><p>就逻辑结构而言，任何一棵树都是一个二元组$T=(root,F)$，其中$root$是数据元素，称作是树的根结点；$F$是$m(m\geq0)$棵树的森林，$F=(T_1,T_2,\dots,T_m)$，其中$T_i=(r_i,F_i)$称作根$root$的第$i$棵子树；当$m\not=0$时，在树根和其子树森林之间就存在着下列关系：</p><p>$$RF={&lt;root,r_i&gt;|i=1,2,\dots,m,m&gt;0}$$</p><p>这个定义将有助于得到森林和树与二叉树之间转换的递归定义。</p><h1 id="几种特殊的二叉树"><a href="#几种特殊的二叉树" class="headerlink" title="几种特殊的二叉树"></a>几种特殊的二叉树</h1><h2 id="满二叉树"><a href="#满二叉树" class="headerlink" title="满二叉树"></a>满二叉树</h2><p>一棵深度为$k$且有$2^k-1$个结点的二叉树被称为<strong>满二叉树</strong>(也叫作<strong>完美二叉树</strong>）。例如下面的这棵树就是一棵满二叉树：</p><p><img src="https://i.loli.net/2018/11/17/5befd88ee84d4.png" alt="1094457-20170225183610632-1388959691.png"></p><p>在满二叉树中的结点，要么是叶子结点（结点的度为 0），要么结点同时具有左右子树（结点的度为 2）.</p><h2 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h2><p>我们可以对满二叉树的结点进行连续编号，约定从根结点起，自上而下，自左至右。由此可以引出完全二叉树的定义。深度为$k​$的，有$n​$个结点的二叉树，当且仅当其每一个结点都与深度为$k​$的满二叉树一一对应时，称之为<strong>完全二叉树</strong>。完全二叉树除最后一层外的每层结点都完全填满，在最后一层上如果不是满的，则只缺少右边的若干结点。</p><p>什么意思呢？我们以下面的完全二叉树为例：</p><p><img src="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2005508633,321956076&fm=26&gp=0.jpg" alt></p><p>可以看到，完全二叉树的叶子结点分布在最后一层和倒数第二层。我们将完全二叉树的性质总结如下：</p><ul><li>叶子结点只可能在可能在层次最大的两层上出现</li><li>对于任意的一个结点，若其右子树下的子孙的最大层次为$l$，则其左子树的最大层次必定为$l$或$l+1$</li></ul><p>完全二叉树有许多重要的性质，将在下一节中介绍。</p><h1 id="二叉树的性质"><a href="#二叉树的性质" class="headerlink" title="二叉树的性质"></a>二叉树的性质</h1><p>我们着重来讲一讲二叉树的性质。因为这方面是NOIP初赛的重点。</p><p>二叉树具有下列重要特性：</p><ul><li><p>性质一 在二叉树的第$i$层上至多有$2^{i-1}$个结点$(i\geq0)$</p><p>我们可以利用数学归纳法来证明此命题。</p><p>当$i=1$时，只有一个根结点。显然，$2^{i-1}=2^0=1$是正确的。</p><p>现在假设有一数$j(1\leq j&lt;i)$，易得第$j$层上至多有$2^{i-1}$个结点。那么，可以证明$j=i$时命题也成立。</p><p>由数学归纳法假设：第$i-1$层上至多有$2^{i-1}$个结点。由于二叉树的每个节点的度至多为二，故在第$i$层上的最大结点数为第$i-1$层的最大结点数的两倍。即$2\times2^{i-2}=2^{i-1}$。</p></li><li><p>性质二：深度为$k(k\geq1)$的二叉树至多有$2^k-1$个结点。</p><p>由性质一可得，深度为$k$的二叉树的最大结点数为:</p><p>$$f(k)=\sum_{i=1}^k2^{i-1}=2^k-1$$</p></li><li><p>性质三：对于任何一棵二叉树$T$，如果其叶子结点的个数为$n_0$，度为二的结点数为$n_2$，那么$n_0=n_2+1$</p><p>我们设$n_1$为二叉树$T$中度为一的结点数。因为二叉树中所有结点的度均小于或等于二，因此二叉树$T$的结点总数为:</p><p>$$n=n_0+n_1+n_2$$</p><p>我们再来考虑二叉树中的分支数。除了根节点之外，其余的结点都有一个分支进入，设$B$为分支总数，则$n=B+1$。由于这些分支是度为一或二的结点射出的，所以又有$B=n_1+2n_2$。于是得：</p><p>$$n=n_1+2n_2+1$$</p><p>结合上述方程组，得：</p><p>$$n_0=n_2+1$$</p></li><li><p>性质四：具有$n​$个结点的完全二叉树的深度为$\lfloor \log_2n\rfloor+1​$</p><p>请确保理解了上一节中对完全二叉树的相关定义。</p><p>假设完全二叉树$T$的深度为$k$，根据性质二和完全二叉树的定义有：</p><p>$2^{k-1}-1&lt;n\leq2^k-1​$或$2^{k-1}\leq n&lt;2^k​$</p><p>于是$k-1\leq \log_2n&lt;k$</p><p>因为$k&gt;0$</p><p>所以$k=\lfloor \log_2n\rfloor+1$。</p></li><li><p>性质五：如果对一棵有$n​$个结点的完全二叉树$T​$的结点按层序遍历编号，则对任一结点$i(1\leq i\leq n)​$，有：</p><ul><li>如果$i=1​$，则结点$i​$就是$T​$的根，没有父亲；如果$i&gt;1​$，则其父亲的编号为$\lfloor \frac{i}{2}\rfloor​$。</li><li>如果$2i&gt;n$，则结点$i$没有左子树，即结点$i$是叶子结点。否则其左孩子的编号为$2i$</li><li>如果$2i+1&gt;n$，则结点$i$没有右子树；否则其右孩子的编号是$2i+1$</li></ul><p>对于上面的命题，这里不给出证明。但这不意味着它不重要。感兴趣的同学可以自行上网搜索。</p></li></ul><h1 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h1><p>在二叉树的一些应用当中，我们经常需要对结点进行访问。这就提出了一个<strong>遍历二叉树</strong>(traversing binary tree)的问题，即如何按某条搜索路径寻访树中的每一个结点，使得每个结点都被访问一次，而且只被访问一次。“访问”是一个很广的含义，可以是对结点进行某种处理，也可以是打印结点的值，甚至是释放结点所占的内存空间。遍历对于线性结构来说是非常容易的，用$O(n)$的暴力做法就可以解决。但遍历二叉树则是一个相对困难的过程——我们需要整理出一种规律，以便使二叉树上的结点可以排列在一个线性结构上，从而便于遍历。</p><p>回顾二叉树的递归定义，我们知道二叉树是由三个基本单位组成：根结点，左子树和右子树。因此，我们若是可以一次遍历这三部分，那么我们就可以遍历整棵二叉树了。伟大的计算机科学家们为我们创造了如下的遍历算法：<strong>先序遍历</strong>，<strong>中序遍历</strong>和<strong>后序遍历</strong>。</p><h2 id="先序遍历"><a href="#先序遍历" class="headerlink" title="先序遍历"></a>先序遍历</h2><p>先序遍历的定义为：</p><p>若二叉树为空，则为空操作，否则：</p><ol><li>访问根结点</li><li>先序遍历左子树</li><li>先序遍历右子树</li></ol><h2 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h2><p>中序遍历的定义为：</p><p>若二叉树为空，则为空操作，否则：</p><ol><li>中序遍历左子树</li><li>访问根结点</li><li>中序遍历右子树</li></ol><h2 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h2><p>后序遍历的定义为：</p><p>若二叉树为空，则为空操作，否则：</p><ol><li>后序遍历左子树</li><li>后序遍历右子树</li><li>访问根结点</li></ol><p><strong>请务必掌握上述的遍历算法</strong></p><h1 id="二叉树的一些应用"><a href="#二叉树的一些应用" class="headerlink" title="二叉树的一些应用"></a>二叉树的一些应用</h1><p>这里简单列举一例，不再赘述：</p><ul><li>二叉树存储表达式（支持前缀、中缀、后缀表达式）</li></ul><p>有兴趣的同学可以自行上网搜索相关资料。</p>]]></content>
      
      
      <categories>
          
          <category> 讲义 </category>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OI导论</title>
      <link href="/2018/11/11/OI%E5%AF%BC%E8%AE%BA/"/>
      <url>/2018/11/11/OI%E5%AF%BC%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="第0章-前言"><a href="#第0章-前言" class="headerlink" title="第0章 前言"></a>第0章 前言</h1><h2 id="第一节-什么是OI"><a href="#第一节-什么是OI" class="headerlink" title="第一节 什么是OI"></a>第一节 什么是OI</h2><p><strong>OI(Olympiad in Informatics,信息学奥林匹克竞赛)是一门新鲜的竞赛学科</strong>。它和和物理、数学等竞赛性质相同。OI也是高考中唯一没有的竞赛学科(<del>虽然我认为以后会加入</del>)。那么问题来了，我们为什么要学习OI呢？</p><p>学习OI，在很大程度上不是为了开发产品，但事实上，开发产品的时候往往离不开OI中所涉及的算法。所以，如果想将来做软件业务的同学也需要学习OI。那么，到底什么是算法竞赛，什么是算法呢？</p><p><strong>算法(Algorithm)，是算法竞赛的核心</strong>。程序中充斥着算法，生活中充斥着算法，数学里也充斥着算法。我们用下面的例题来讲解一下算法的妙处。</p><p><strong>给定一个正整数$n$，求$1^2+2^2+3^2+……+n^2$的值。</strong></p><p>这道题，也许许多同学都会想到一个解法：<strong>暴力求解法</strong>。也就是，我把$n$的值带入到函数$y=f(n)=\sum_{k=1}^{n}k^2$之中，就可以得到结果。当然了，暴力求解法是最简单的算法，无论是人工手算还是电脑计算都很方便。但是，当$n=10^5$时，手算是一时半会儿算不出结果的。于是，我们就需要更高级的算法。</p><p>通过对数学公式的推导。我们可以得到$y=f(n)=\sum_{k=1}^{n}k^2=\frac{n(n+1)(2n+1)}{6}$。这样，哪怕$n$的值很大很大，我们都可以通过几步的乘除法运算即可求出答案。感兴趣的同学可以看一下<strong>平方和公式的推导过程</strong>：</p><p>前提条件:$a^2+b^2=a(a+b)-b(a-b)$</p><p>设$S=1^2+2^2+3^2+\dots+n^2$</p><p>$S=1(2-1)+2(3-1)+\dots+n(n+1-1)$</p><p>$S=1·2+2·3+\dots+n(n-1)-\frac{n(n+1)}{2}$</p><p>$∵\frac{n(n+1)}{2}=\frac{1}{3}[n(n+1)(n+2)-(n-1)n(n+1)]$</p><p>$∴S=\frac{1}{3}(1\times2\times3-0\times1\times2)+\frac{1}{3}(2\times3\times4-1\times2\times3)+\dots+\frac{1}{3}[n\times(n+1)\times(n+2)$</p><p>$-(n-1)\times n\times(n+1)]$</p><p>$∴S=\frac{n(n+1)(2n+1)}{6}$</p><p>看到了吧？这就是算法的伟大。这也给了我们一些启示：</p><ul><li><strong>优秀的算法可以帮助我们减少工作量</strong></li><li><strong>OI与数学是密不可分的亲兄弟</strong></li><li><strong>公式不是无缘无故产生的，而是推导出来的！</strong></li></ul><p>具体衡量算法的优秀程度的知识会在后面详细讲解。大家现在需要知道的是，<strong>算法是有优劣之分的！</strong></p><p>上面的那个例子，仅仅是对式子的恒等变形来优化常数。然而，在一般的算法设计中，我们还需要其他的算法设计策略。</p><h3 id="学习OI的好处"><a href="#学习OI的好处" class="headerlink" title="学习OI的好处"></a>学习OI的好处</h3><p>当然，学习并积极地参加到OI中是有很大的好处的。我简单地列举几点：</p><ul><li>锻炼思维，开拓视野。</li><li>有利于升学。</li><li>更高效率地使用电脑。</li><li>可以提升你的数学能力和英语能力。</li><li>现代的互联网公司在面试的时候更加爱考察程序员的算法素养。因此今天学习OI，对将来想在计算机行业就业的同学也是非常有帮助的。</li></ul><h2 id="第二节-和OI相关的赛事"><a href="#第二节-和OI相关的赛事" class="headerlink" title="第二节 和OI相关的赛事"></a>第二节 和OI相关的赛事</h2><p>OI虽然是是一门新起的奥林匹克事业，但是关于OI的国内外赛事是很多的。如果希望通过参加这些比赛来获得荣誉，了解这些比赛是非常有必要的。</p><h3 id="NOIP"><a href="#NOIP" class="headerlink" title="NOIP"></a>NOIP</h3><p><strong>NOIP(National Olympiad in Informatics in Provinces，全国青少年信息学奥林匹克联赛)，旧称分区联赛</strong>，是一项由CCF(China Computer Federation，中国计算机学会)承办的全国统一的OI赛事。NOIP分初赛和复赛——初赛是地级市一级的，为笔试，复赛是省与直辖市一级的，为上机。初赛一般在每年十月中旬举行，而复赛一般在每年十一月举行。NOIP支持的语言有<strong>C语言</strong>，<strong>C++语言</strong>和<strong>Pascal语言</strong>(在2020年，NOIP将不再支持Pascal语言)。为了顺应时代发展的潮流，<strong>本套讲义将由C语言和C++语言作为程序描述语言</strong>。</p><p>NOIP分普及组和提高组。普及组的难度较低，面向广大的小学生和初中生；提高组的难度较高，面向广大的高中生。NOIP在初赛和复赛都设置了<strong>等级奖励制度</strong>，即一二三等奖颁奖制度。一般来说，进入复赛的资格就是初赛一等奖。不同的省的分数线一般都不一样，<strong>浙江江苏的分数线尤其高</strong>，因此浙江和江苏的OIer需要付出更大的努力才可以获得NOIP的成功。</p><h3 id="NOI"><a href="#NOI" class="headerlink" title="NOI"></a>NOI</h3><p><strong>NOI(National Olympiad in Informatics，全国青少年信息学奥林匹克竞赛)</strong>是NOIP的兄弟比赛，是一项由CCF(China Computer Federation，中国计算机学会)承办的全国统一的OI赛事。NOI是国内包括港澳在内的省级代表队最高水平的大赛，自1984年至2018年，在国内包括香港、澳门，已组织了33次竞赛活动。<strong>每年经各省选拔产生5名选手(其中至少有一名是女选手)</strong>，由中国计算机学会在计算机普及较好的城市组织进行比赛。这一竞赛记个人成绩，同时记团体总分。</p><p>NOI期间，举办同步夏令营和NOI网上同步赛，给那些程序设计爱好者和高手提供机会。为增加竞赛的竞争性、对抗性和趣味性以及可视化，NOI组织进行团体对抗赛，团体对抗赛实质上是程序对抗赛，其成绩纳入总分计算。</p><p>NOI将从正式选手中选出成绩前50名，作为中国国家集训队，集训队队员将获得清华北大的保送资格。</p><h3 id="其他的OI赛事"><a href="#其他的OI赛事" class="headerlink" title="其他的OI赛事"></a>其他的OI赛事</h3><p>其他比较著名的OI赛事还有<strong>APIO，CTSC，IOI</strong>等。感兴趣的同学可以自行上网搜索。</p><h2 id="第三节-什么是OJ"><a href="#第三节-什么是OJ" class="headerlink" title="第三节 什么是OJ"></a>第三节 什么是OJ</h2><p>我们来稍微的了解一下什么是OJ(<strong>Online Judge</strong>)。OJ是很好的在线OI学习平台，它的中文名字叫做<strong>在线测评系统</strong>。OJ上面有许多信息竞赛的习题，我们通过做这些习题来提升自我——最后到达一种神犇的境界。我们主要使用下面的几个OJ：</p><ul><li><a href="https://www.luogu.org/" target="_blank" rel="noopener">洛谷|计算机科学教育新生态</a></li><li><a href="https://wzoi.cc" target="_blank" rel="noopener">温州中学OJ</a></li><li><a href="http://oj.jzxx.net" target="_blank" rel="noopener">古老的无名OJ</a></li></ul><p>我主要是想讲一些OJ上面的测评信息的含义：</p><table><thead><tr><th>类型</th><th>全写</th><th>含义</th></tr></thead><tbody><tr><td>AC</td><td>Accept</td><td>程序通过，得到分数</td></tr><tr><td>CE</td><td>Compile Error</td><td>编译错误，失去全部分数</td></tr><tr><td>PC</td><td>Partially Correct</td><td>部分正确，没有分数</td></tr><tr><td>WA</td><td>Wrong Answer</td><td>答案错误，没有分数</td></tr><tr><td>RE</td><td>Runtime Error</td><td>运行时错误，没有分数</td></tr><tr><td>TLE</td><td>Time Limit Exceeded</td><td>超出时间限制，没有分数</td></tr><tr><td>MLE</td><td>Memory Limit Exceeded</td><td>超出内存限制，没有分数</td></tr><tr><td>OLE</td><td>Output Limit Exceeded</td><td>输出超过限制，没有分数</td></tr><tr><td>UKE</td><td>Unknown Error</td><td>出现未知错误，没有分数</td></tr></tbody></table><p>关于OJ的信息还有很多，这里不再赘述。</p><h2 id="第四节-讲义信息与声明"><a href="#第四节-讲义信息与声明" class="headerlink" title="第四节 讲义信息与声明"></a>第四节 讲义信息与声明</h2><p>本讲义由浙江巨硬科技有限公司旗下的巨硬教育撰写。由巨硬教育教研组全体成员参与编写。</p><p><strong>copyright</strong>：本讲义的全部内容在 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" target="_blank" rel="noopener">CC BY-SA 4.0-署名-相同方式共享 4.0</a>协议之条款下提供，附加条款亦可能应用。</p><h1 id="第一章-基础语义"><a href="#第一章-基础语义" class="headerlink" title="第一章 基础语义"></a>第一章 基础语义</h1><hr><h2 id="第一节-C语言的输出语句"><a href="#第一节-C语言的输出语句" class="headerlink" title="第一节 C语言的输出语句"></a>第一节 C语言的输出语句</h2><p>所谓输入输出，就是在控制台中输入输出。什么是控制台呢？看：</p><p><img src="https://i.loli.net/2018/10/11/5bbf17c4674db.png" alt="9xc6bt.png"></p><p>这就是一个控制台。也就是我们常说的<strong>命令提示符</strong>。一般的程序的输入输出都在这里完成。</p><p>我们从最简单的一个程序开始:<a href="https://www.luogu.org/problemnew/show/T17036" target="_blank" rel="noopener">Hello,World!</a></p><p>这道题目的唯一要求就是输出一行<code>Hello,World!</code>。为了让程序实现输出文本这个功能，我们需要用到下面的C语言输出语句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello,World!"</span>);</span><br></pre></td></tr></table></figure><p>但是，只有那么一条语句，程序是不可能通过编译的。完整的正确的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello,world!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的程序有很多大家暂时不理解的地方：我们暂时把这些当做是固定搭配来记忆，以后会详细解释。所以，我们总结出的C语言程序框架是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们把程序所要执行的语句写在<code>return 0;</code>和<code>{</code>之间——正像上面的程序一样。</p><blockquote><p> 暂时记不住程序结构也没关系，练习的次数多了，以后自然会记住的，不要着急。</p></blockquote><p>现在你学会了C语言的输出语句了吗？如果答案是肯定的，那么恭喜你，你已经成为了一名程序员，并且已经教会电脑说话了！</p><h3 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h3><ol><li>输出5次“Hello，World！”。</li></ol><h2 id="第二节-C语言的变量类型以及标识符命名规则"><a href="#第二节-C语言的变量类型以及标识符命名规则" class="headerlink" title="第二节 C语言的变量类型以及标识符命名规则"></a>第二节 C语言的变量类型以及标识符命名规则</h2><h3 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h3><p> 什么是变量呢？<strong>变量就是指值的大小会改变的量</strong>。比如大家在玩游戏时人物的血量值——血量值是一直在更新的，不是恒定不变的，那么血量值就是变量。</p><p> 我们也可以从数学函数的角度理解变量。如函数$y=f(x)=ax+b$。其中的$x$和$y$就是变量。当然咯，有变量就会有<strong>常量</strong>。顾名思义，常量就是那些值一直不变的量。比如上述函数中的$a$和$b$。他们是不会变化的。</p><p> 变量和常量的概念同样适合于C语言——或者说，它适用于所有的编程语言。</p><p> 由于变量和常量里面存的是数值，所以我们就需要知道有哪些类型的数值：</p><ul><li>整数</li><li>小数(浮点数)</li></ul><p>在C语言中，同样有对应数值类型存储的变量(常量)的类型。如下表所示：</p><table><thead><tr><th align="center">关键字</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center"><code>int</code></td><td align="center">$[ -2147483648,2147483648]$</td></tr><tr><td align="center"><code>unsigned int</code></td><td align="center">$[ 0,4294967295]$</td></tr><tr><td align="center"><code>unsigned short</code></td><td align="center">$[ 0,65535]$</td></tr><tr><td align="center"><code>long</code></td><td align="center">$[ -2147483648,2147483648]$</td></tr><tr><td align="center"><code>unsigned long</code></td><td align="center">$[ 0,4294967295]$</td></tr><tr><td align="center"><code>char</code></td><td align="center">$[ -128,127]$</td></tr><tr><td align="center"><code>unsigned char</code></td><td align="center">$[0,255]$</td></tr><tr><td align="center"><code>float</code></td><td align="center">$[ 3.4 x\times10^{-38}, 3.4 \times 10^{38}]$</td></tr><tr><td align="center"><code>double</code></td><td align="center">$[1.7\times 10^{-308},1.7\times 10^{308}]$</td></tr></tbody></table><blockquote><p>注：<strong>本表中所提供的精度范围只适用于$32$位的计算机</strong>。</p></blockquote><p>这张表格很重要。我希望你们都可以把他给记住。我们来详细地读一下这张表。里面出现了一个新词：<strong>关键字</strong>。什么是关键字呢？<strong>关键字(也叫关键词)是一个语言的重要组成部分</strong>——他们非常特殊，因为他们对于语言语法的描述有至关重要的作用！</p><p>我们来看一些变量的定义语法:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br></pre></td></tr></table></figure><p>我们首先写出了一个关键字<code>int</code>。之后是一个空格，空格后边是一个<strong>标识符</strong>——变量的名字。那么标识符的命名有什么样的规则呢？</p><h3 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h3><p>标识符，通俗地讲，就是名字。我在这里讲一下标识符的命名规则：<strong>标识符可以包含英语的26个字母的大小写，也可以包含十个阿拉伯数字(但是不能是标识符的开头)，也可以包括下划线(<code>_</code>)，标识符不能是关键字，也不能拥有除上述字符之外的任何字符！！！</strong>。</p><p>比如说，下面的这些标识符就是不合法的：</p><ul><li><code>int</code></li><li><code>9years</code></li><li><code>@59hahaha</code></li></ul><p>第一个标识符错在哪里呢？<strong>标识符不能是关键字</strong>，而<code>int</code>是一个关键字。</p><p>第二个标识符错在哪里呢？<strong>标识符不可以以数字开头</strong>，而<code>9</code>是一个数字。</p><p>第三个标识符错在哪里呢？<strong>标识符不可以包含其他字符</strong>，而<code>@</code>是其他字符。</p><p>我再举几个合法的标识符的例子：</p><ul><li><code>C_Programming_Language</code></li><li><code>year2018</code></li><li><code>Macrohard</code></li><li><code>_</code></li></ul><p>第四个标识符是不是很出乎你的意料？</p><p>但是，我们通常有一套标识符的命名习惯：<strong>标识符最好以小写字母开头，而不是其他。中间最好不要有阿拉伯数字(末尾可以)，单词和单词中间最好以下划线分割——否则从第二个单词起，单词的首字母大写。</strong>我举几个正确的例子：</p><ul><li><code>hello_macrohard</code></li><li><code>helloMacrohard</code></li><li><code>macrohard365</code></li></ul><p>合理的遵守标识符的命名规则有助于让你的代码更加优美。</p><h3 id="课后习题-1"><a href="#课后习题-1" class="headerlink" title="课后习题"></a>课后习题</h3><ol><li>口述C语言的标识符定义规则</li></ol><h2 id="第三节-C语言的输入语句"><a href="#第三节-C语言的输入语句" class="headerlink" title="第三节 C语言的输入语句"></a>第三节 C语言的输入语句</h2><h3 id="整型输入"><a href="#整型输入" class="headerlink" title="整型输入"></a>整型输入</h3><p>我们对于一个人是否是文盲的评判标准是什么？<strong>他是否正确地能读和写</strong>。现在，我们已经让计算机学会了写，是时候让它学会读了。</p><p>我们从一个最简单的程序开始：<a href="https://www.luogu.org/problemnew/show/T16653" target="_blank" rel="noopener">a+b问题</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a+b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的程序出现了一个之前从来都没有涉及到的语句：<code>scanf</code>语句：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br></pre></td></tr></table></figure><p>上述代码的意义就是：从控制台读入两个整数，分别存放在变量$a$和$b$中。也就是说，假如我在控制台里边输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><p>那么变量$a$和$b$的值将会是$1$和$2$。懂了吗？读入整数的规则就是这样的。我把它总结一下，总结在这里：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d..."</span>,&amp;?,&amp;?,...&amp;?);</span><br></pre></td></tr></table></figure><p>假设我们要输入$n$个整数，变量的名字分别是$a1,a2,\dots,an$。那么我们就可以这样输入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d……%d"</span>,&amp;a1,&amp;a2,……,&amp;an);</span><br></pre></td></tr></table></figure><p>注意：<strong>输入整数的提示符是<code>%d</code>。逗号后面变量名字前面的<code>&amp;</code>符号是必须的</strong>。我举几个错误的例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%D"</span>,&amp;a);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,a);</span><br></pre></td></tr></table></figure><p>第一个输入语句错在<strong>提示符错误</strong>。输入整数的提示符应该是<code>%d</code>，而不是<code>%D</code>。<strong>C语言是区分大小写的</strong>。</p><p>第二个输入语句错在<strong>变量前面没有加<code>&amp;</code>符号</strong>。目前，我们所写的一切<code>scanf</code>语句都是需要<code>&amp;</code>的。<code>&amp;</code>是取地址操作。</p><p>上面的程序中的<code>printf</code>语句也有了新的用法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello,world!"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a+b);</span><br></pre></td></tr></table></figure><p>看出区别了吗？第一个<code>printf</code>语句只拥有一个参数，而第二个拥有两个！不过，我们已经学习了<code>scanf</code>的用法，第二条<code>printf</code>语句的用法也是可以望文生义的。它的作用是：<strong>输出表达式$a+b$的值</strong>。</p><p>所以，对于执行两个整数的加法运算，这个程序像是天衣无缝了。但是，现实生活中，相加的两个数往往是实数，如何实现对实数的输入输出呢？</p><h3 id="浮点输入"><a href="#浮点输入" class="headerlink" title="浮点输入"></a>浮点输入</h3><p>在上一节中，我们了解到：C语言中的变量(常量)的数值类型包含整型和浮点型。我在这里补充一点：<strong>浮点型变量也是可以存储整数的</strong>。如果想要让我们的程序支持浮点加法运算，我们首先需要把变量$a$和$b$改成浮点型的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> a,b;</span><br></pre></td></tr></table></figure><p>没错，那么接下来我们尝试着修改<code>scanf</code>语句。在上文我讲过：<code>%d</code>是输入输出整数的提示符，那么自然也有给小数准备的提示符，他是<code>%f</code>。</p><p>那么我们就可以把scanf语句修改成这样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f%f"</span>,&amp;a,&amp;b);</span><br></pre></td></tr></table></figure><p>下面的<code>printf</code>语句也是一样的改法，完整的程序如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f%f"</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f"</span>,a+b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行效果如下所示：</p><p><img src="https://i.loli.net/2018/10/13/5bc148d43e5b3.png" alt="9zkkR0.png"></p><h3 id="输出回车"><a href="#输出回车" class="headerlink" title="输出回车"></a>输出回车</h3><p>结果没有任何问题。但是这个“请按任意键继续”出现在这里是不是有点难受？我们只需要在printf语句中做一个小小的变动即可：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>,a+b);</span><br></pre></td></tr></table></figure><p>看到了吗？只需要加一个<code>\n</code>即可。在输出语句中，<code>\n</code>意味着输出一个回车。效果如下：    </p><p><img src="https://i.loli.net/2018/10/13/5bc148d451508.png" alt="9zksQf.png"></p><p><strong>注意事项：在许多OJ中测评，有没有行尾回车都是无所谓的(也就是过滤多余的回车和空格)。但是也有一些严格的OJ，每一个空格和回车都会算的清清楚楚。所以，在做题的时候，输出一个行尾回车总是保险的。</strong></p><p>现在你学会了输入语句了吗？恭喜你，现在你已经可以使用C语言进行简单的编程了！稍微总结一下提示符的用法：<strong>整数用<code>%d</code>，浮点数用<code>%f</code></strong>。</p><h3 id="课后习题-2"><a href="#课后习题-2" class="headerlink" title="课后习题"></a>课后习题</h3><ol><li>请你完成这样的一个程序：此程序从控制台读入两个实数，输出它们的乘积。</li><li>请你完成这样的一个程序：此程序从控制台读入一个整数和一个实数，输出它们的和。</li></ol><h2 id="第四节-C语言中的特殊符号的意义"><a href="#第四节-C语言中的特殊符号的意义" class="headerlink" title="第四节 C语言中的特殊符号的意义"></a>第四节 C语言中的特殊符号的意义</h2><h3 id="空格在C语言中的意义"><a href="#空格在C语言中的意义" class="headerlink" title="空格在C语言中的意义"></a>空格在C语言中的意义</h3><p>空格是什么？在我们的日常交流当中，空格没有任何的意义。比如这句话：“我   喜欢   C  语言 编    程 。”虽然字与字之间有一些空格，但我们还是可以读懂的。C语言也大致如此：<strong>只要不在标识符内部出现空格，其他部分出现空格一般是无害的</strong>。比如下面的这个程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>                                  <span class="title">main</span>       <span class="params">(   <span class="keyword">void</span>    )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>        (      <span class="string">"Hello,world\n"</span>      );</span><br><span class="line">    <span class="keyword">return</span>             <span class="number">0</span>       ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个程序是完全正确的。可见，C语言编译器也和我们人一样，对空格不怎么敏感。</p><p>需要注意的是，TAB和回车的性质和空格相似，在此不再赘述。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h4><p>什么是注释？我们来看一下<a href="https://baike.baidu.com/item/%E6%B3%A8%E9%87%8A/1994725?fr=aladdin" target="_blank" rel="noopener">注释的定义</a>：</p><blockquote><p>注释，是对书籍或文章的语汇、内容、背景、引文作介绍、评议的文字。为古书注释开始于先秦时期。中国古代分得较细，分别称之为注、释、传、笺、疏、章句等。包含的内容很广。诸凡字词音义、时间地点、人物事迹、典故出处、时代背景都是注释对象。有脚注、篇末注、夹注等形式。古籍注释列在正文之中，有双行夹注和夹注。现代书籍注释列于正文当页之下，称脚注，亦称本面注；列于文章之后或列于书籍之后者称篇末注。不管采用何种方式，全书注文的编排一般要求统一，以便于读者查考。注释在教科书中应用广泛，是学生学习的重要条件。</p><p>现代学术作品中的注释一般分内容解释和来源解释两种。前者多指对文章或书籍中某一部分词句作进一步说明，但为了防止冗杂而把它放在段落之外（文末或页边）。后者一般是为了保障原作者的著作权，注明某此语句、词语、观点的来源，以便读者的查证，另一方面也是为了尊重他人的知识产权和劳动。</p></blockquote><p>那么注释在程序里面有什么用呢？很显然，注释的加入可以让人们充分的理解程序的意义。比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello,World!\n"</span>);<span class="comment">//输出Hello,World!</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的程序使用了C语言的<strong>单行注释</strong>的语法。拥有详细注释的程序对于初学者（甚至是根本不懂C语言的人）来说是非常友好的。因为他们可以通过注释中的内容来猜测出程序的作用。</p><p>单行注释由<code>//</code>打头<code>//</code>后边就是注释的内容。需要注意的是，<strong>单行注释是不可以跨行的</strong>。比如下面的程序就不是合法的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello,World!\n"</span>);<span class="comment">//输出</span></span><br><span class="line">    Hello,World!</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请记住这个规则，因为在很多编程语言当中，<code>//</code>都是单行注释的标志。</p><p>编译器对于任何的注释内容都是不会理会 。</p><h4 id="跨行注释"><a href="#跨行注释" class="headerlink" title="跨行注释"></a>跨行注释</h4><p>跨行注释在C语言中的写法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这里写注释内容</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>我需要说明很重要的一点：<strong>跨行注释是不可以嵌套的！</strong>比如下面的程序就不是合法的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello,World!\n"</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    输出</span></span><br><span class="line"><span class="comment">    /*Hello,World!*/</span></span><br><span class="line">    */</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><p>我们知道，<strong>计算机的本职工作是做计算</strong>。那么在计算机中有哪一些常用的基本运算符呢？</p><h4 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h4><p>在日常生活中，加减乘除运算应该是使用最频繁的运算了。C语言也提供了丰富的加减乘除运算的服务。符号表如下：</p><table><thead><tr><th>运算名称</th><th>表达符号</th></tr></thead><tbody><tr><td>加法</td><td>+</td></tr><tr><td>减法</td><td>-</td></tr><tr><td>乘法</td><td>*</td></tr><tr><td>除法</td><td>/</td></tr></tbody></table><p>需要说明的是：<strong>运算在C语言中同样存在优先级的问题。且乘除法运算的优先级比加减法大。</strong>对于运算，我们有下面的运算规则：</p><p><strong>先算优先级大的运算，再算优先级小的运算。总体顺序都是从左到右的。</strong></p><p>注意：<strong>在C语言中处理加减乘除运算时，符号两边要是都是整数，那结果就是整数如果有一个浮点数，则结果将是浮点数。</strong>所以，这个表达式在C语言中的结果是3。但是如果是表达式或，结果就为想一想，为什么？</p><h4 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h4><p>当然，在C语言中，你也可以给运算加上括号，以此提升运算的优先级。需要说明的是：<strong>C语言中只有小括号一种表示优先运算的括号！但是小括号也是可以嵌套的。</strong>比如：$(1+(1+9))\times10-8$，在C语言中，这个算式是正确的。它对应着数学中的这个算式:$[1+(1+9)]\times10-8$。</p><h4 id="取模运算"><a href="#取模运算" class="headerlink" title="取模运算"></a>取模运算</h4><p>取模运算应该是大家从来都没有见过的。其实这个运算小学老师应该需要和大家讲——遗憾的是，取模运算一般在高等数学中才会学到。</p><p>我们先来观察一个算式：$10\div3=3\dots1$</p><p>还记得各个部分分别叫什么名字吗？$10$是被除数，第一个$3$是除数，第二个$3$是商，$1$是<strong>余数</strong>。我们的取模运算求的就是这个余数。比方说我们想要知道$2018$除以$365$的余数，在数学中，我们这样表示：$2018,mod,365$。在C语言中，我们这样表示：<code>2018%365</code>。<code>%</code>在C语言中就表达了取模运算的意思。</p><p>注意：<strong>取模运算的两个运算数一定要是int型的整型变量。</strong></p><p>取模运算的优先级和乘除法同级。</p><h3 id="课后习题-3"><a href="#课后习题-3" class="headerlink" title="课后习题"></a>课后习题</h3><ol><li>请为自己编写的一个程序加上注释，要求使用单行注释和跨行注释。</li><li>请把下面的表达式转化成C语言的表达形式：<ul><li>$[1.5\times a+(\frac bc)]\times(a,mod,b)$</li><li>$2018\div365+\frac53$</li></ul></li></ol><h2 id="第五节-输入输出语句扩展与字符变量"><a href="#第五节-输入输出语句扩展与字符变量" class="headerlink" title="第五节 输入输出语句扩展与字符变量"></a>第五节 输入输出语句扩展与字符变量</h2><hr><p>我们现在已经掌握了<code>printf</code>和<code>scanf</code>的基本使用方法：包括输入输出整型或浮点型的变量值。事实上，C语言还提供了其他的输入输出函数。</p><h3 id="puts"><a href="#puts" class="headerlink" title="puts"></a>puts</h3><p><code>puts</code>函数的发明可谓是一个伟大的功绩。puts函数主要用于输出一个字符串——而不是输出变量的值。而且，<code>puts</code>函数输出字符串的时候自动输出一个回车。这些都不是重点，重点是：<strong><code>puts</code>函数比<code>printf</code>快</strong>。</p><p>比如这个程序段：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello,Macrohard!\n"</span>);</span><br></pre></td></tr></table></figure><p>就可以等价于：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">puts</span>(<span class="string">"Hello,Macrohard!"</span>);</span><br></pre></td></tr></table></figure><p>如果大家在以后需要输出一个带回车的字符串，请使用<code>puts</code>来完成任务，毕竟这是一个优化的方法。</p><h3 id="putchar"><a href="#putchar" class="headerlink" title="putchar"></a>putchar</h3><p><code>putchar</code>是一个非常非常快速的输出函数。需要注意的是，<strong><code>putchar</code>只能输出一个字符</strong>。使用方法如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">putchar</span>(<span class="string">'?'</span>);<span class="comment">//?是你需要输出的字符</span></span><br></pre></td></tr></table></figure><p>注意：<strong>C语言里面字符串需要用一对双引号配合表达，而单个字符则使用单引号</strong>。</p><h3 id="字符型变量"><a href="#字符型变量" class="headerlink" title="字符型变量"></a>字符型变量</h3><p>这里需要解释一下什么是字符型变量。字符型变量就是存储一个字符(<strong>注意，本讲义中的字符均指西文字符，而不是中文或其他字符</strong>)。</p><p>实际上，我们在计算机中是无法直接表示出一个字符的。所以我们需要借助<a href="https://baike.baidu.com/item/ascall%E7%A0%81/7813401?fr=aladdin" target="_blank" rel="noopener">ASCLL码表</a>来存储一个字符。现代计算机科学存储字符的思路很明确：<strong>将字符标号，然后使用这个编号来表示字符即可</strong>。事实上，这世界上所有的主流的码表都是这样设计的。我们来看一下ASCLL码表的编码规则：</p><table><thead><tr><th align="center">DEC（十进制）</th><th align="center">HEX（十六进制）</th><th align="center">CHAR（字符）</th><th align="center">转义字符</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">00</td><td align="center">NUL</td><td align="center"><code>\0</code></td></tr><tr><td align="center">1</td><td align="center">01</td><td align="center">SOH</td><td align="center"></td></tr><tr><td align="center">2</td><td align="center">02</td><td align="center">STX</td><td align="center"></td></tr><tr><td align="center">3</td><td align="center">03</td><td align="center">ETX</td><td align="center"></td></tr><tr><td align="center">4</td><td align="center">04</td><td align="center">EOT</td><td align="center"></td></tr><tr><td align="center">5</td><td align="center">05</td><td align="center">ENQ</td><td align="center"></td></tr><tr><td align="center">6</td><td align="center">06</td><td align="center">ACK</td><td align="center"></td></tr><tr><td align="center">7</td><td align="center">07</td><td align="center">BEL</td><td align="center"><code>\a</code></td></tr><tr><td align="center">8</td><td align="center">08</td><td align="center">BS</td><td align="center"><code>\b</code></td></tr><tr><td align="center">9</td><td align="center">09</td><td align="center">HT</td><td align="center"><code>\t</code></td></tr><tr><td align="center">10</td><td align="center">0A</td><td align="center">LF</td><td align="center"><code>\n</code></td></tr><tr><td align="center">11</td><td align="center">0B</td><td align="center">VT</td><td align="center"><code>\v</code></td></tr><tr><td align="center">12</td><td align="center">0C</td><td align="center">FF</td><td align="center"><code>\f</code></td></tr><tr><td align="center">13</td><td align="center">0D</td><td align="center">CR</td><td align="center"><code>\r</code></td></tr><tr><td align="center">14</td><td align="center">0E</td><td align="center">SO</td><td align="center"></td></tr><tr><td align="center">15</td><td align="center">0F</td><td align="center">SI</td><td align="center"></td></tr><tr><td align="center">16</td><td align="center">10</td><td align="center">DLE</td><td align="center"></td></tr><tr><td align="center">17</td><td align="center">11</td><td align="center">DC1</td><td align="center"></td></tr><tr><td align="center">18</td><td align="center">12</td><td align="center">DC2</td><td align="center"></td></tr><tr><td align="center">19</td><td align="center">13</td><td align="center">DC3</td><td align="center"></td></tr><tr><td align="center">20</td><td align="center">14</td><td align="center">DC4</td><td align="center"></td></tr><tr><td align="center">21</td><td align="center">15</td><td align="center">NAK</td><td align="center"></td></tr><tr><td align="center">22</td><td align="center">16</td><td align="center">SYN</td><td align="center"></td></tr><tr><td align="center">23</td><td align="center">17</td><td align="center">ETB</td><td align="center"></td></tr><tr><td align="center">24</td><td align="center">18</td><td align="center">CAN</td><td align="center"></td></tr><tr><td align="center">25</td><td align="center">19</td><td align="center">EM</td><td align="center"></td></tr><tr><td align="center">26</td><td align="center">1A</td><td align="center">SUB</td><td align="center"></td></tr><tr><td align="center">27</td><td align="center">1B</td><td align="center">ESC</td><td align="center"></td></tr><tr><td align="center">28</td><td align="center">1C</td><td align="center">FS</td><td align="center"></td></tr><tr><td align="center">29</td><td align="center">1D</td><td align="center">GS</td><td align="center"></td></tr><tr><td align="center">30</td><td align="center">1E</td><td align="center">RS</td><td align="center"></td></tr><tr><td align="center">31</td><td align="center">1F</td><td align="center">US</td><td align="center"></td></tr><tr><td align="center">32</td><td align="center">20</td><td align="center">space空格</td><td align="center"></td></tr><tr><td align="center">33</td><td align="center">21</td><td align="center">!</td><td align="center"></td></tr><tr><td align="center">34</td><td align="center">22</td><td align="center">“</td><td align="center"></td></tr><tr><td align="center">35</td><td align="center">23</td><td align="center">#</td><td align="center"></td></tr><tr><td align="center">36</td><td align="center">24</td><td align="center">$</td><td align="center"></td></tr><tr><td align="center">37</td><td align="center">25</td><td align="center">%</td><td align="center"></td></tr><tr><td align="center">38</td><td align="center">26</td><td align="center">&amp;</td><td align="center"></td></tr><tr><td align="center">39</td><td align="center">27</td><td align="center">‘</td><td align="center"></td></tr><tr><td align="center">40</td><td align="center">28</td><td align="center">(</td><td align="center"></td></tr><tr><td align="center">41</td><td align="center">29</td><td align="center">)</td><td align="center"></td></tr><tr><td align="center">42</td><td align="center">2A</td><td align="center">*</td><td align="center"></td></tr><tr><td align="center">43</td><td align="center">2B</td><td align="center">+</td><td align="center"></td></tr><tr><td align="center">44</td><td align="center">2C</td><td align="center">,</td><td align="center"></td></tr><tr><td align="center">45</td><td align="center">2D</td><td align="center">-</td><td align="center"></td></tr><tr><td align="center">46</td><td align="center">2E</td><td align="center">.</td><td align="center"></td></tr><tr><td align="center">47</td><td align="center">2F</td><td align="center">/</td><td align="center"></td></tr><tr><td align="center">48~57</td><td align="center">30~39</td><td align="center">0~9</td><td align="center"></td></tr><tr><td align="center">58</td><td align="center">3A</td><td align="center">:</td><td align="center"></td></tr><tr><td align="center">59</td><td align="center">3B</td><td align="center">;</td><td align="center"></td></tr><tr><td align="center">60</td><td align="center">3C</td><td align="center">&lt;</td><td align="center"></td></tr><tr><td align="center">61</td><td align="center">3D</td><td align="center">=</td><td align="center"></td></tr><tr><td align="center">62</td><td align="center">3E</td><td align="center">&gt;</td><td align="center"></td></tr><tr><td align="center">63</td><td align="center">3F</td><td align="center">?</td><td align="center"></td></tr><tr><td align="center">64</td><td align="center">40</td><td align="center">@</td><td align="center"></td></tr><tr><td align="center">65~90</td><td align="center">41~5A</td><td align="center">A~Z</td><td align="center"></td></tr><tr><td align="center">91</td><td align="center">5B</td><td align="center">[</td><td align="center"></td></tr><tr><td align="center">92</td><td align="center">5C</td><td align="center">\</td><td align="center">``</td></tr><tr><td align="center">93</td><td align="center">5D</td><td align="center">]</td><td align="center"></td></tr><tr><td align="center">94</td><td align="center">5E</td><td align="center">^</td><td align="center"></td></tr><tr><td align="center">95</td><td align="center">5F</td><td align="center">_</td><td align="center"></td></tr><tr><td align="center">96</td><td align="center">60</td><td align="center">`</td><td align="center"></td></tr><tr><td align="center">97~122</td><td align="center">61~7A</td><td align="center">a~z</td><td align="center"></td></tr><tr><td align="center">123</td><td align="center">7B</td><td align="center">{</td><td align="center"></td></tr><tr><td align="center">124</td><td align="center">7C</td><td align="center">|</td><td align="center"></td></tr><tr><td align="center">125</td><td align="center">7D</td><td align="center">}</td><td align="center"></td></tr><tr><td align="center">126</td><td align="center">7E</td><td align="center">~</td><td align="center"></td></tr><tr><td align="center">127</td><td align="center">7F</td><td align="center">DEL</td><td align="center"></td></tr></tbody></table><blockquote><p> 注：第128～255号为扩展字符（不常用）。</p></blockquote><p>上表中出现了一个新的名词：<strong>转义字符</strong>。什么是转义字符呢？转义字符可以轻松地表达那些不便表达的字符——比如我们之前学的<code>\n</code>。转义字符都由<code>\</code>打头。</p><p>我需要说明的是：<strong>在C语言内部，字符类型其实是以整数的形式存储的</strong>。也就是说，<code>char</code>其实也是一种整型类型。</p><h3 id="getchar"><a href="#getchar" class="headerlink" title="getchar"></a>getchar</h3><p>讲完了字符变量，也就可以讲<code>getchar</code>了。<code>getchar</code>函数的工作就是从控制台读取一个字符。比如下面的代码段:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"ASCALL码是:%d\n"</span>,getchar());</span><br></pre></td></tr></table></figure><p>这个程序简单地讲述了一下<code>getchar</code>的用法。请牢记<code>getchar</code>的用法，这个函数在未来的程序编写中将由非常巨大的作用。</p><h3 id="课后习题-4"><a href="#课后习题-4" class="headerlink" title="课后习题"></a>课后习题</h3><ol><li>请你完成这样的一个程序：此程序从控制台读入一个字符，输出它的ASCLL码。</li><li>请你完成这样的一个程序：此程序从控制台读入一个字符，请输出这个字符。</li></ol><h2 id="第六节-章节小结"><a href="#第六节-章节小结" class="headerlink" title="第六节 章节小结"></a>第六节 章节小结</h2><p>到目前为止，我们已经讲完了C语言最基础的一部分语法。通过对这些输入输出函数的合理利用，相信大家已经可以完成一些非常简单的程序了。</p>]]></content>
      
      
      <categories>
          
          <category> 讲义 </category>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
